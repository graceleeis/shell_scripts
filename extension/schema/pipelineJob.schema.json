{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "definitions": {
        "CreationContextSchema": {
            "type": "object",
            "properties": {
                "created_at": {
                    "title": "created_at",
                    "type": "string",
                    "format": "date-time"
                },
                "created_by": {
                    "title": "created_by",
                    "type": "string"
                },
                "created_by_type": {
                    "title": "created_by_type",
                    "type": "string"
                },
                "last_modified_at": {
                    "title": "last_modified_at",
                    "type": "string",
                    "format": "date-time"
                },
                "last_modified_by": {
                    "title": "last_modified_by",
                    "type": "string"
                },
                "last_modified_by_type": {
                    "title": "last_modified_by_type",
                    "type": "string"
                }
            },
            "additionalProperties": false
        },
        "ManagedIdentitySchema": {
            "required": [
                "type"
            ],
            "type": "object",
            "properties": {
                "client_id": {
                    "title": "client_id",
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "managed"
                    ],
                    "title": "type"
                },
                "msi_resource_id": {
                    "title": "msi_resource_id",
                    "type": "string"
                },
                "object_id": {
                    "title": "object_id",
                    "type": "string"
                }
            },
            "additionalProperties": false
        },
        "AMLTokenIdentitySchema": {
            "required": [
                "type"
            ],
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "aml_token"
                    ],
                    "title": "type"
                }
            },
            "additionalProperties": false
        },
        "UserIdentitySchema": {
            "required": [
                "type"
            ],
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "user_identity"
                    ],
                    "title": "type"
                }
            },
            "additionalProperties": false
        },
        "InputSchema": {
            "type": "object",
            "properties": {
                "mode": {
                    "type": "string",
                    "enum": [
                        "download",
                        "ro_mount",
                        "eval_mount",
                        "eval_download",
                        "direct"
                    ],
                    "title": "mode"
                },
                "path": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "^azureml:.*",
                            "arm_type": "datasets",
                            "title": "path"
                        },
                        {
                            "type": "string",
                            "pattern": "^azureml:.*",
                            "arm_type": "models",
                            "title": "path"
                        },
                        {
                            "type": "string",
                            "pattern": "^azureml:.*",
                            "arm_type": "data",
                            "title": "path"
                        },
                        {
                            "title": "path",
                            "type": "string"
                        },
                        {
                            "title": "path",
                            "type": "string"
                        }
                    ]
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "uri_file",
                        "uri_folder",
                        "custom_model",
                        "mlflow_model",
                        "mltable",
                        "triton_model"
                    ],
                    "title": "type"
                }
            },
            "additionalProperties": false
        },
        "InputLiteralValueSchema": {
            "type": "object",
            "properties": {
                "value": {
                    "anyOf": [
                        {
                            "title": "value",
                            "type": "string"
                        },
                        {
                            "title": "value",
                            "type": "boolean"
                        },
                        {
                            "title": "value",
                            "type": "number",
                            "format": "integer"
                        },
                        {
                            "title": "value",
                            "type": "number",
                            "format": "float"
                        }
                    ]
                }
            },
            "additionalProperties": false
        },
        "CommandSchema": {
            "required": [
                "component"
            ],
            "type": "object",
            "properties": {
                "code": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "title": "code",
                            "type": "string"
                        },
                        {
                            "title": "code",
                            "type": "string"
                        }
                    ]
                },
                "command": {
                    "title": "command",
                    "type": "string",
                    "description": "The command run and the parameters passed. This string may contain place holders of inputs in {}. "
                },
                "component": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "^azureml://registries/.*",
                            "arm_type": null,
                            "title": "component"
                        },
                        {
                            "type": "string",
                            "pattern": "^azureml:.*",
                            "arm_type": "components",
                            "title": "component"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/AnonymousCommandComponentSchema"
                        },
                        {
                            "type": "string",
                            "title": "component"
                        },
                        {
                            "type": "string",
                            "pattern": "^file:.*"
                        }
                    ]
                },
                "compute": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "enum": [
                                "local"
                            ],
                            "title": "compute"
                        },
                        {
                            "type": "string",
                            "pattern": "^azureml:.*",
                            "arm_type": "computes",
                            "title": "compute"
                        },
                        {
                            "title": "compute",
                            "type": "string"
                        }
                    ]
                },
                "distribution": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/PyTorchDistributionSchema"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/TensorFlowDistributionSchema"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/MPIDistributionSchema"
                        }
                    ]
                },
                "environment": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/AnonymousEnvironmentSchema"
                        },
                        {
                            "type": "string",
                            "pattern": "^azureml:.*",
                            "arm_type": "environments",
                            "title": "environment"
                        },
                        {
                            "type": "string",
                            "pattern": "^file:.*"
                        }
                    ]
                },
                "environment_variables": {
                    "title": "environment_variables",
                    "type": "object",
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "title": "environment_variables",
                                "type": "string"
                            }
                        ]
                    }
                },
                "inputs": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/InputSchema"
                        },
                        {
                            "title": "inputs",
                            "type": "object",
                            "additionalProperties": {
                                "anyOf": [
                                    {
                                        "type": "string",
                                        "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                    },
                                    {
                                        "type": "string",
                                        "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                    },
                                    {
                                        "type": "object",
                                        "$ref": "#/definitions/InputSchema"
                                    },
                                    {
                                        "type": "object",
                                        "$ref": "#/definitions/InputLiteralValueSchema"
                                    },
                                    {
                                        "title": "inputs",
                                        "type": "number",
                                        "format": "integer"
                                    },
                                    {
                                        "title": "inputs",
                                        "type": "string"
                                    },
                                    {
                                        "title": "inputs",
                                        "type": "boolean"
                                    },
                                    {
                                        "title": "inputs",
                                        "type": "number",
                                        "format": "float"
                                    }
                                ]
                            }
                        }
                    ]
                },
                "limits": {
                    "type": "object",
                    "$ref": "#/definitions/CommandJobLimitsSchema"
                },
                "outputs": {
                    "title": "outputs",
                    "type": "object",
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "string",
                                "pattern": "^\\$\\{\\{parent\\.outputs\\.(.*?)\\}\\}$",
                                "title": "outputs"
                            },
                            {
                                "type": "object",
                                "$ref": "#/definitions/OutputSchema"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "resources": {
                    "type": "object",
                    "$ref": "#/definitions/ResourceConfigurationSchema"
                },
                "$schema": {
                    "title": "$schema",
                    "type": "string",
                    "readonly": true
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "command"
                    ],
                    "title": "type"
                }
            },
            "additionalProperties": false
        },
        "AnonymousCommandComponentSchema": {
            "required": [
                "environment"
            ],
            "type": "object",
            "properties": {
                "code": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "^azureml://registries/.*",
                            "arm_type": "codes",
                            "title": "code"
                        },
                        {
                            "type": "string",
                            "pattern": "^azureml:.*",
                            "arm_type": "codes",
                            "title": "code"
                        },
                        {
                            "title": "code",
                            "type": "string"
                        },
                        {
                            "title": "code",
                            "type": "string"
                        }
                    ]
                },
                "command": {
                    "title": "command",
                    "type": "string",
                    "description": "String to be executed. Can set variables using ${{ }}"
                },
                "creation_context": {
                    "type": "object",
                    "$ref": "#/definitions/CreationContextSchema"
                },
                "description": {
                    "title": "description",
                    "type": "string"
                },
                "display_name": {
                    "title": "display_name",
                    "type": "string"
                },
                "distribution": {
                    "anyOf": [
                        {
                            "type": "object",
                            "$ref": "#/definitions/MPIDistributionSchema"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/TensorFlowDistributionSchema"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/PyTorchDistributionSchema"
                        }
                    ]
                },
                "environment": {
                    "anyOf": [
                        {
                            "type": "object",
                            "$ref": "#/definitions/AnonymousEnvironmentSchema"
                        },
                        {
                            "type": "string",
                            "pattern": "^azureml://registries/.*",
                            "arm_type": "environments",
                            "title": "environment"
                        },
                        {
                            "type": "string",
                            "pattern": "^azureml:.*",
                            "arm_type": "environments",
                            "title": "environment"
                        },
                        {
                            "type": "string",
                            "pattern": "^file:.*"
                        }
                    ]
                },
                "id": {
                    "title": "id",
                    "type": "string"
                },
                "inputs": {
                    "title": "inputs",
                    "type": "object",
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "type": "object",
                                "$ref": "#/definitions/ParameterSchema"
                            },
                            {
                                "type": "object",
                                "$ref": "#/definitions/InputPortSchema"
                            }
                        ]
                    }
                },
                "is_deterministic": {
                    "title": "is_deterministic",
                    "type": "boolean"
                },
                "latest_version": {
                    "title": "latest_version",
                    "type": "string",
                    "readonly": true
                },
                "name": {
                    "title": "name",
                    "type": "string",
                    "readonly": true
                },
                "outputs": {
                    "title": "outputs",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "$ref": "#/definitions/OutputPortSchema"
                    }
                },
                "resources": {
                    "type": "object",
                    "$ref": "#/definitions/ComponentResourceSchema"
                },
                "$schema": {
                    "title": "$schema",
                    "type": "string"
                },
                "tags": {
                    "title": "tags",
                    "type": "object",
                    "additionalProperties": {}
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "command"
                    ],
                    "title": "type"
                },
                "version": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        }
                    ],
                    "title": "version",
                    "readonly": true
                }
            },
            "additionalProperties": false
        },
        "MPIDistributionSchema": {
            "required": [
                "type"
            ],
            "type": "object",
            "properties": {
                "process_count_per_instance": {
                    "title": "process_count_per_instance",
                    "type": "number",
                    "format": "integer"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "mpi"
                    ],
                    "title": "type"
                }
            },
            "additionalProperties": false
        },
        "TensorFlowDistributionSchema": {
            "required": [
                "type"
            ],
            "type": "object",
            "properties": {
                "parameter_server_count": {
                    "title": "parameter_server_count",
                    "type": "number",
                    "format": "integer"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "tensorflow"
                    ],
                    "title": "type"
                },
                "worker_count": {
                    "title": "worker_count",
                    "type": "number",
                    "format": "integer"
                }
            },
            "additionalProperties": false
        },
        "PyTorchDistributionSchema": {
            "required": [
                "type"
            ],
            "type": "object",
            "properties": {
                "process_count_per_instance": {
                    "title": "process_count_per_instance",
                    "type": "number",
                    "format": "integer"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "pytorch"
                    ],
                    "title": "type"
                }
            },
            "additionalProperties": false
        },
        "AnonymousEnvironmentSchema": {
            "type": "object",
            "properties": {
                "build": {
                    "type": "object",
                    "$ref": "#/definitions/BuildContextSchema",
                    "description": "Docker build context to create the environment. Mutually exclusive with image"
                },
                "conda_file": {
                    "anyOf": [
                        {
                            "title": "conda_file",
                            "type": "string"
                        },
                        {
                            "title": "conda_file",
                            "type": "string"
                        }
                    ]
                },
                "creation_context": {
                    "type": "object",
                    "$ref": "#/definitions/CreationContextSchema"
                },
                "description": {
                    "title": "description",
                    "type": "string"
                },
                "id": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "^azureml://registries/.*",
                            "arm_type": null,
                            "title": "id",
                            "readonly": true
                        },
                        {
                            "type": "string",
                            "pattern": "^azureml:.*",
                            "arm_type": "environments",
                            "title": "id",
                            "readonly": true
                        }
                    ]
                },
                "image": {
                    "title": "image",
                    "type": "string"
                },
                "inference_config": {
                    "type": "object",
                    "$ref": "#/definitions/InferenceConfigSchema"
                },
                "latest_version": {
                    "title": "latest_version",
                    "type": "string",
                    "readonly": true
                },
                "name": {
                    "title": "name",
                    "type": "string"
                },
                "os_type": {
                    "type": "string",
                    "enum": [
                        "linux",
                        "windows"
                    ],
                    "title": "os_type"
                },
                "$schema": {
                    "title": "$schema",
                    "type": "string",
                    "readonly": true
                },
                "tags": {
                    "title": "tags",
                    "type": "object",
                    "additionalProperties": {}
                },
                "version": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        }
                    ],
                    "title": "version"
                }
            },
            "additionalProperties": false
        },
        "BuildContextSchema": {
            "type": "object",
            "properties": {
                "dockerfile_path": {
                    "title": "dockerfile_path",
                    "type": "string"
                },
                "path": {
                    "title": "path",
                    "type": "string"
                }
            },
            "additionalProperties": false
        },
        "InferenceConfigSchema": {
            "required": [
                "liveness_route",
                "readiness_route",
                "scoring_route"
            ],
            "type": "object",
            "properties": {
                "liveness_route": {
                    "type": "object",
                    "$ref": "#/definitions/RouteSchema"
                },
                "readiness_route": {
                    "type": "object",
                    "$ref": "#/definitions/RouteSchema"
                },
                "scoring_route": {
                    "type": "object",
                    "$ref": "#/definitions/RouteSchema"
                }
            },
            "additionalProperties": false
        },
        "RouteSchema": {
            "required": [
                "path",
                "port"
            ],
            "type": "object",
            "properties": {
                "path": {
                    "title": "path",
                    "type": "string"
                },
                "port": {
                    "title": "port",
                    "type": "number",
                    "format": "integer"
                }
            },
            "additionalProperties": false
        },
        "ParameterSchema": {
            "required": [
                "type"
            ],
            "type": "object",
            "properties": {
                "default": {
                    "anyOf": [
                        {
                            "title": "default",
                            "type": "string"
                        },
                        {
                            "title": "default",
                            "type": "number",
                            "format": "decimal"
                        },
                        {
                            "title": "default",
                            "type": "boolean"
                        }
                    ]
                },
                "description": {
                    "title": "description",
                    "type": "string"
                },
                "enum": {
                    "title": "enum",
                    "type": "array",
                    "items": {
                        "title": "enum",
                        "type": "string"
                    }
                },
                "max": {
                    "anyOf": [
                        {
                            "title": "max",
                            "type": "string"
                        },
                        {
                            "title": "max",
                            "type": "number",
                            "format": "decimal"
                        }
                    ]
                },
                "min": {
                    "anyOf": [
                        {
                            "title": "min",
                            "type": "string"
                        },
                        {
                            "title": "min",
                            "type": "number",
                            "format": "decimal"
                        }
                    ]
                },
                "optional": {
                    "title": "optional",
                    "type": "boolean"
                },
                "type": {
                    "title": "type",
                    "type": "string",
                    "enum": [
                        "number",
                        "integer",
                        "boolean",
                        "string",
                        "object"
                    ],
                    "enumNames": []
                }
            },
            "additionalProperties": false
        },
        "InputPortSchema": {
            "required": [
                "type"
            ],
            "type": "object",
            "properties": {
                "default": {
                    "title": "default",
                    "type": "string"
                },
                "description": {
                    "title": "description",
                    "type": "string"
                },
                "optional": {
                    "title": "optional",
                    "type": "boolean"
                },
                "type": {
                    "title": "type",
                    "type": "string",
                    "enum": [
                        "path",
                        "uri_file",
                        "uri_folder",
                        "custom_model",
                        "mlflow_model",
                        "mltable",
                        "triton_model"
                    ],
                    "enumNames": []
                }
            },
            "additionalProperties": false
        },
        "OutputPortSchema": {
            "required": [
                "type"
            ],
            "type": "object",
            "properties": {
                "description": {
                    "title": "description",
                    "type": "string"
                },
                "type": {
                    "title": "type",
                    "type": "string",
                    "enum": [
                        "path",
                        "uri_file",
                        "uri_folder",
                        "custom_model",
                        "mlflow_model",
                        "mltable",
                        "triton_model"
                    ],
                    "enumNames": []
                }
            },
            "additionalProperties": false
        },
        "ComponentResourceSchema": {
            "type": "object",
            "properties": {
                "instance_count": {
                    "title": "instance_count",
                    "type": "number",
                    "format": "integer"
                },
                "instance_type": {
                    "title": "instance_type",
                    "type": "string",
                    "description": "The instance type to make available to this job."
                },
                "properties": {
                    "title": "properties",
                    "type": "object",
                    "additionalProperties": {}
                }
            },
            "additionalProperties": false
        },
        "CommandJobLimitsSchema": {
            "type": "object",
            "properties": {
                "timeout": {
                    "title": "timeout",
                    "type": "number",
                    "format": "integer"
                }
            },
            "additionalProperties": false
        },
        "OutputSchema": {
            "type": "object",
            "properties": {
                "mode": {
                    "type": "string",
                    "enum": [
                        "mount",
                        "upload",
                        "rw_mount",
                        "direct"
                    ],
                    "title": "mode"
                },
                "path": {
                    "title": "path",
                    "type": "string"
                },
                "$schema": {
                    "title": "$schema",
                    "type": "string",
                    "readonly": true
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "uri_file",
                        "uri_folder",
                        "custom_model",
                        "mlflow_model",
                        "mltable",
                        "triton_model"
                    ],
                    "title": "type"
                }
            },
            "additionalProperties": false
        },
        "ResourceConfigurationSchema": {
            "type": "object",
            "properties": {
                "instance_count": {
                    "title": "instance_count",
                    "type": "number",
                    "format": "integer"
                },
                "instance_type": {
                    "title": "instance_type",
                    "type": "string",
                    "description": "The instance type to make available to this job."
                },
                "properties": {
                    "title": "properties",
                    "type": "object",
                    "additionalProperties": {}
                }
            },
            "additionalProperties": false
        },
        "SweepSchema": {
            "required": [
                "limits",
                "objective",
                "trial"
            ],
            "type": "object",
            "properties": {
                "compute": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "enum": [
                                "local"
                            ],
                            "title": "compute"
                        },
                        {
                            "type": "string",
                            "pattern": "^azureml:.*",
                            "arm_type": "computes",
                            "title": "compute"
                        },
                        {
                            "title": "compute",
                            "type": "string"
                        }
                    ]
                },
                "early_termination": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/BanditPolicySchema"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/MedianStoppingPolicySchema"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/TruncationSelectionPolicySchema"
                        }
                    ]
                },
                "inputs": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/InputSchema"
                        },
                        {
                            "title": "inputs",
                            "type": "object",
                            "additionalProperties": {
                                "anyOf": [
                                    {
                                        "type": "string",
                                        "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                    },
                                    {
                                        "type": "string",
                                        "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                    },
                                    {
                                        "type": "object",
                                        "$ref": "#/definitions/InputSchema"
                                    },
                                    {
                                        "type": "object",
                                        "$ref": "#/definitions/InputLiteralValueSchema"
                                    },
                                    {
                                        "title": "inputs",
                                        "type": "number",
                                        "format": "integer"
                                    },
                                    {
                                        "title": "inputs",
                                        "type": "string"
                                    },
                                    {
                                        "title": "inputs",
                                        "type": "boolean"
                                    },
                                    {
                                        "title": "inputs",
                                        "type": "number",
                                        "format": "float"
                                    }
                                ]
                            }
                        }
                    ]
                },
                "limits": {
                    "type": "object",
                    "$ref": "#/definitions/SweepJobLimitsSchema"
                },
                "objective": {
                    "type": "object",
                    "$ref": "#/definitions/SweepObjectiveSchema",
                    "description": "The name and optimization goal of the primary metric."
                },
                "outputs": {
                    "title": "outputs",
                    "type": "object",
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "string",
                                "pattern": "^\\$\\{\\{parent\\.outputs\\.(.*?)\\}\\}$",
                                "title": "outputs"
                            },
                            {
                                "type": "object",
                                "$ref": "#/definitions/OutputSchema"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "sampling_algorithm": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "enum": [
                                "bayesian",
                                "grid",
                                "random"
                            ],
                            "title": "sampling_algorithm"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/RandomSamplingAlgorithmSchema"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/GridSamplingAlgorithmSchema"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/BayesianSamplingAlgorithmSchema"
                        }
                    ]
                },
                "$schema": {
                    "title": "$schema",
                    "type": "string",
                    "readonly": true
                },
                "search_space": {
                    "title": "search_space",
                    "type": "object",
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "object",
                                "$ref": "#/definitions/ChoiceSchema"
                            },
                            {
                                "type": "object",
                                "$ref": "#/definitions/UniformSchema"
                            },
                            {
                                "type": "object",
                                "$ref": "#/definitions/QUniformSchema"
                            },
                            {
                                "type": "object",
                                "$ref": "#/definitions/NormalSchema"
                            },
                            {
                                "type": "object",
                                "$ref": "#/definitions/QNormalSchema"
                            },
                            {
                                "type": "object",
                                "$ref": "#/definitions/RandintSchema"
                            }
                        ]
                    }
                },
                "trial": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "^azureml:.*",
                            "arm_type": "components",
                            "title": "trial"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/AnonymousCommandComponentSchema"
                        },
                        {
                            "type": "string",
                            "title": "trial"
                        },
                        {
                            "type": "string",
                            "pattern": "^file:.*"
                        }
                    ]
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "sweep"
                    ],
                    "title": "type"
                }
            },
            "additionalProperties": false
        },
        "BanditPolicySchema": {
            "required": [
                "type"
            ],
            "type": "object",
            "properties": {
                "delay_evaluation": {
                    "title": "delay_evaluation",
                    "type": "number",
                    "format": "integer"
                },
                "evaluation_interval": {
                    "title": "evaluation_interval",
                    "type": "number",
                    "format": "integer"
                },
                "slack_amount": {
                    "title": "slack_amount",
                    "type": "number",
                    "format": "float"
                },
                "slack_factor": {
                    "title": "slack_factor",
                    "type": "number",
                    "format": "float"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "bandit"
                    ],
                    "title": "type"
                }
            },
            "additionalProperties": false
        },
        "MedianStoppingPolicySchema": {
            "required": [
                "type"
            ],
            "type": "object",
            "properties": {
                "delay_evaluation": {
                    "title": "delay_evaluation",
                    "type": "number",
                    "format": "integer"
                },
                "evaluation_interval": {
                    "title": "evaluation_interval",
                    "type": "number",
                    "format": "integer"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "median_stopping"
                    ],
                    "title": "type"
                }
            },
            "additionalProperties": false
        },
        "TruncationSelectionPolicySchema": {
            "required": [
                "truncation_percentage",
                "type"
            ],
            "type": "object",
            "properties": {
                "delay_evaluation": {
                    "title": "delay_evaluation",
                    "type": "number",
                    "format": "integer"
                },
                "evaluation_interval": {
                    "title": "evaluation_interval",
                    "type": "number",
                    "format": "integer"
                },
                "truncation_percentage": {
                    "title": "truncation_percentage",
                    "type": "number",
                    "format": "integer"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "truncation_selection"
                    ],
                    "title": "type"
                }
            },
            "additionalProperties": false
        },
        "SweepJobLimitsSchema": {
            "required": [
                "max_total_trials"
            ],
            "type": "object",
            "properties": {
                "max_concurrent_trials": {
                    "title": "max_concurrent_trials",
                    "type": "number",
                    "format": "integer",
                    "description": "Sweep Job max concurrent trials."
                },
                "max_total_trials": {
                    "title": "max_total_trials",
                    "type": "number",
                    "format": "integer",
                    "description": "Sweep Job max total trials."
                },
                "timeout": {
                    "title": "timeout",
                    "type": "number",
                    "format": "integer",
                    "description": "The max run duration in Seconds, after which the job will be cancelled."
                },
                "trial_timeout": {
                    "title": "trial_timeout",
                    "type": "number",
                    "format": "integer",
                    "description": "Sweep Job Trial timeout value."
                }
            },
            "additionalProperties": false
        },
        "SweepObjectiveSchema": {
            "required": [
                "goal",
                "primary_metric"
            ],
            "type": "object",
            "properties": {
                "goal": {
                    "type": "string",
                    "enum": [
                        "minimize",
                        "maximize"
                    ],
                    "title": "goal"
                },
                "primary_metric": {
                    "title": "primary_metric",
                    "type": "string"
                }
            },
            "additionalProperties": false
        },
        "RandomSamplingAlgorithmSchema": {
            "required": [
                "type"
            ],
            "type": "object",
            "properties": {
                "rule": {
                    "type": "string",
                    "enum": [
                        "random",
                        "sobol"
                    ],
                    "title": "rule"
                },
                "seed": {
                    "title": "seed",
                    "type": "number",
                    "format": "integer"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "random"
                    ],
                    "title": "type"
                }
            },
            "additionalProperties": false
        },
        "GridSamplingAlgorithmSchema": {
            "required": [
                "type"
            ],
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "grid"
                    ],
                    "title": "type"
                }
            },
            "additionalProperties": false
        },
        "BayesianSamplingAlgorithmSchema": {
            "required": [
                "type"
            ],
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "bayesian"
                    ],
                    "title": "type"
                }
            },
            "additionalProperties": false
        },
        "ChoiceSchema": {
            "required": [
                "type"
            ],
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "choice"
                    ],
                    "title": "type"
                },
                "values": {
                    "title": "values",
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                                "title": "values"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                                "title": "values"
                            },
                            {
                                "title": "values",
                                "type": "number",
                                "format": "integer"
                            },
                            {
                                "title": "values",
                                "type": "string"
                            },
                            {
                                "title": "values",
                                "type": "number",
                                "format": "float"
                            },
                            {
                                "title": "values",
                                "type": "object",
                                "additionalProperties": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                        },
                                        {
                                            "type": "string",
                                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                        },
                                        {
                                            "type": "string",
                                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                                            "title": "values"
                                        },
                                        {
                                            "type": "string",
                                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                                            "title": "values"
                                        },
                                        {
                                            "type": "object",
                                            "$ref": "#/definitions/ChoiceSchema"
                                        },
                                        {
                                            "type": "object",
                                            "$ref": "#/definitions/NormalSchema"
                                        },
                                        {
                                            "type": "object",
                                            "$ref": "#/definitions/QNormalSchema"
                                        },
                                        {
                                            "type": "object",
                                            "$ref": "#/definitions/RandintSchema"
                                        },
                                        {
                                            "type": "object",
                                            "$ref": "#/definitions/UniformSchema"
                                        },
                                        {
                                            "type": "object",
                                            "$ref": "#/definitions/QUniformSchema"
                                        },
                                        {
                                            "title": "values",
                                            "type": "number",
                                            "format": "integer"
                                        },
                                        {
                                            "title": "values",
                                            "type": "number",
                                            "format": "float"
                                        },
                                        {
                                            "title": "values",
                                            "type": "string"
                                        }
                                    ]
                                }
                            }
                        ]
                    }
                }
            },
            "additionalProperties": false
        },
        "NormalSchema": {
            "required": [
                "mu",
                "sigma",
                "type"
            ],
            "type": "object",
            "properties": {
                "mu": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "title": "mu",
                            "type": "number",
                            "format": "integer"
                        },
                        {
                            "title": "mu",
                            "type": "number",
                            "format": "float"
                        }
                    ]
                },
                "sigma": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "title": "sigma",
                            "type": "number",
                            "format": "integer"
                        },
                        {
                            "title": "sigma",
                            "type": "number",
                            "format": "float"
                        }
                    ]
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "normal",
                        "lognormal"
                    ],
                    "title": "type"
                }
            },
            "additionalProperties": false
        },
        "QNormalSchema": {
            "required": [
                "mu",
                "q",
                "sigma",
                "type"
            ],
            "type": "object",
            "properties": {
                "mu": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "title": "mu",
                            "type": "number",
                            "format": "integer"
                        },
                        {
                            "title": "mu",
                            "type": "number",
                            "format": "float"
                        }
                    ]
                },
                "q": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "title": "q",
                            "type": "number",
                            "format": "integer"
                        },
                        {
                            "title": "q",
                            "type": "number",
                            "format": "float"
                        }
                    ]
                },
                "sigma": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "title": "sigma",
                            "type": "number",
                            "format": "integer"
                        },
                        {
                            "title": "sigma",
                            "type": "number",
                            "format": "float"
                        }
                    ]
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "qnormal",
                        "qlognormal"
                    ],
                    "title": "type"
                }
            },
            "additionalProperties": false
        },
        "RandintSchema": {
            "required": [
                "type",
                "upper"
            ],
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "randint"
                    ],
                    "title": "type"
                },
                "upper": {
                    "title": "upper",
                    "type": "number",
                    "format": "integer"
                }
            },
            "additionalProperties": false
        },
        "UniformSchema": {
            "required": [
                "max_value",
                "min_value",
                "type"
            ],
            "type": "object",
            "properties": {
                "max_value": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "title": "max_value",
                            "type": "number",
                            "format": "integer"
                        },
                        {
                            "title": "max_value",
                            "type": "number",
                            "format": "float"
                        }
                    ]
                },
                "min_value": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "title": "min_value",
                            "type": "number",
                            "format": "integer"
                        },
                        {
                            "title": "min_value",
                            "type": "number",
                            "format": "float"
                        }
                    ]
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "uniform",
                        "loguniform"
                    ],
                    "title": "type"
                }
            },
            "additionalProperties": false
        },
        "QUniformSchema": {
            "required": [
                "max_value",
                "min_value",
                "q",
                "type"
            ],
            "type": "object",
            "properties": {
                "max_value": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "title": "max_value",
                            "type": "number",
                            "format": "integer"
                        },
                        {
                            "title": "max_value",
                            "type": "number",
                            "format": "float"
                        }
                    ]
                },
                "min_value": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "title": "min_value",
                            "type": "number",
                            "format": "integer"
                        },
                        {
                            "title": "min_value",
                            "type": "number",
                            "format": "float"
                        }
                    ]
                },
                "q": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "title": "q",
                            "type": "number",
                            "format": "integer"
                        },
                        {
                            "title": "q",
                            "type": "number",
                            "format": "float"
                        }
                    ]
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "quniform",
                        "qloguniform"
                    ],
                    "title": "type"
                }
            },
            "additionalProperties": false
        },
        "PipelineCommandJobSchema": {
            "required": [
                "command"
            ],
            "type": "object",
            "properties": {
                "code": {
                    "anyOf": [
                        {
                            "title": "code",
                            "type": "string"
                        },
                        {
                            "title": "code",
                            "type": "string"
                        }
                    ]
                },
                "command": {
                    "title": "command",
                    "type": "string",
                    "description": "The command run and the parameters passed. This string may contain place holders of inputs in {}. "
                },
                "compute": {
                    "anyOf": [
                        {
                            "type": "string",
                            "enum": [
                                "local"
                            ],
                            "title": "compute"
                        },
                        {
                            "type": "string",
                            "pattern": "^azureml:.*",
                            "arm_type": "computes",
                            "title": "compute"
                        },
                        {
                            "title": "compute",
                            "type": "string"
                        }
                    ]
                },
                "creation_context": {
                    "type": "object",
                    "$ref": "#/definitions/CreationContextSchema"
                },
                "description": {
                    "title": "description",
                    "type": "string"
                },
                "display_name": {
                    "title": "display_name",
                    "type": "string"
                },
                "distribution": {
                    "anyOf": [
                        {
                            "type": "object",
                            "$ref": "#/definitions/PyTorchDistributionSchema"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/TensorFlowDistributionSchema"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/MPIDistributionSchema"
                        }
                    ]
                },
                "environment": {
                    "anyOf": [
                        {
                            "type": "object",
                            "$ref": "#/definitions/AnonymousEnvironmentSchema"
                        },
                        {
                            "type": "string",
                            "pattern": "^azureml:.*",
                            "arm_type": "environments",
                            "title": "environment"
                        },
                        {
                            "type": "string",
                            "pattern": "^file:.*"
                        }
                    ]
                },
                "environment_variables": {
                    "title": "environment_variables",
                    "type": "object",
                    "additionalProperties": {
                        "title": "environment_variables",
                        "type": "string"
                    }
                },
                "experiment_name": {
                    "title": "experiment_name",
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "pattern": "^azureml:.*",
                    "arm_type": "jobs",
                    "title": "id",
                    "readonly": true
                },
                "identity": {
                    "anyOf": [
                        {
                            "type": "object",
                            "$ref": "#/definitions/ManagedIdentitySchema"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/AMLTokenIdentitySchema"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/UserIdentitySchema"
                        }
                    ]
                },
                "inputs": {
                    "anyOf": [
                        {
                            "type": "object",
                            "$ref": "#/definitions/InputSchema"
                        },
                        {
                            "title": "inputs",
                            "type": "object",
                            "additionalProperties": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "$ref": "#/definitions/InputSchema"
                                    },
                                    {
                                        "type": "object",
                                        "$ref": "#/definitions/InputLiteralValueSchema"
                                    },
                                    {
                                        "title": "inputs",
                                        "type": "number",
                                        "format": "integer"
                                    },
                                    {
                                        "title": "inputs",
                                        "type": "string"
                                    },
                                    {
                                        "title": "inputs",
                                        "type": "boolean"
                                    },
                                    {
                                        "title": "inputs",
                                        "type": "number",
                                        "format": "float"
                                    }
                                ]
                            }
                        }
                    ]
                },
                "limits": {
                    "type": "object",
                    "$ref": "#/definitions/CommandJobLimitsSchema"
                },
                "log_files": {
                    "title": "log_files",
                    "type": "object",
                    "additionalProperties": {
                        "title": "log_files",
                        "type": "string"
                    }
                },
                "name": {
                    "title": "name",
                    "type": "string"
                },
                "outputs": {
                    "title": "outputs",
                    "type": "object",
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "type": "object",
                                "$ref": "#/definitions/OutputSchema"
                            },
                            {
                                "title": "outputs",
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "parameters": {
                    "title": "parameters",
                    "type": "object",
                    "additionalProperties": {}
                },
                "properties": {
                    "title": "properties",
                    "type": "object",
                    "additionalProperties": {
                        "title": "properties",
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "resources": {
                    "type": "object",
                    "$ref": "#/definitions/ResourceConfigurationSchema"
                },
                "$schema": {
                    "title": "$schema",
                    "type": "string",
                    "readonly": true
                },
                "services": {
                    "title": "services",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "$ref": "#/definitions/JobServiceSchema"
                    }
                },
                "status": {
                    "title": "status",
                    "type": "string",
                    "readonly": true
                },
                "tags": {
                    "title": "tags",
                    "type": "object",
                    "additionalProperties": {
                        "title": "tags",
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "command"
                    ],
                    "title": "type"
                }
            },
            "additionalProperties": false
        },
        "JobServiceSchema": {
            "type": "object",
            "properties": {
                "endpoint": {
                    "title": "endpoint",
                    "type": "string",
                    "readonly": true
                },
                "error_message": {
                    "title": "error_message",
                    "type": "string",
                    "readonly": true
                },
                "job_service_type": {
                    "title": "job_service_type",
                    "type": "string"
                },
                "port": {
                    "title": "port",
                    "type": "number",
                    "format": "integer"
                },
                "properties": {
                    "title": "properties",
                    "type": "object",
                    "additionalProperties": {}
                },
                "$schema": {
                    "title": "$schema",
                    "type": "string",
                    "readonly": true
                },
                "status": {
                    "title": "status",
                    "type": "string",
                    "readonly": true
                }
            },
            "additionalProperties": false
        },
        "AutoMLClassificationNodeSchema": {
            "required": [
                "target_column_name",
                "task",
                "type"
            ],
            "type": "object",
            "properties": {
                "compute": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "enum": [
                                "local"
                            ],
                            "title": "compute"
                        },
                        {
                            "type": "string",
                            "pattern": "^azureml:.*",
                            "arm_type": "computes",
                            "title": "compute"
                        },
                        {
                            "title": "compute",
                            "type": "string"
                        }
                    ]
                },
                "creation_context": {
                    "type": "object",
                    "$ref": "#/definitions/CreationContextSchema"
                },
                "cv_split_column_names": {
                    "title": "cv_split_column_names",
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "title": "cv_split_column_names",
                                "type": "string"
                            }
                        ]
                    }
                },
                "description": {
                    "title": "description",
                    "type": "string"
                },
                "display_name": {
                    "title": "display_name",
                    "type": "string"
                },
                "environment_id": {
                    "title": "environment_id",
                    "type": "string"
                },
                "environment_variables": {
                    "title": "environment_variables",
                    "type": "object",
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "title": "environment_variables",
                                "type": "string"
                            }
                        ]
                    }
                },
                "experiment_name": {
                    "title": "experiment_name",
                    "type": "string"
                },
                "featurization": {
                    "type": "object",
                    "$ref": "#/definitions/TableFeaturizationSettingsSchema",
                    "title": "featurization"
                },
                "id": {
                    "type": "string",
                    "pattern": "^azureml:.*",
                    "arm_type": "jobs",
                    "title": "id",
                    "readonly": true
                },
                "identity": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/ManagedIdentitySchema"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/AMLTokenIdentitySchema"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/UserIdentitySchema"
                        }
                    ]
                },
                "limits": {
                    "type": "object",
                    "$ref": "#/definitions/AutoMLTableLimitsSchema",
                    "title": "limits"
                },
                "log_files": {
                    "title": "log_files",
                    "type": "object",
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "title": "log_files",
                                "type": "string"
                            }
                        ]
                    }
                },
                "log_verbosity": {
                    "type": "string",
                    "enum": [
                        "not_set",
                        "debug",
                        "info",
                        "warning",
                        "error",
                        "critical"
                    ],
                    "title": "log_verbosity"
                },
                "n_cross_validations": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "enum": [
                                "auto"
                            ],
                            "title": "n_cross_validations"
                        },
                        {
                            "title": "n_cross_validations",
                            "type": "number",
                            "format": "integer"
                        }
                    ]
                },
                "name": {
                    "title": "name",
                    "type": "string"
                },
                "outputs": {
                    "title": "outputs",
                    "type": "object",
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "object",
                                "$ref": "#/definitions/OutputSchema"
                            },
                            {
                                "type": "string",
                                "pattern": "^\\$\\{\\{parent\\.outputs\\.(.*?)\\}\\}$",
                                "title": "outputs"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "primary_metric": {
                    "type": "string",
                    "enum": [
                        "auc_weighted",
                        "accuracy",
                        "norm_macro_recall",
                        "average_precision_score_weighted",
                        "precision_score_weighted"
                    ],
                    "title": "primary_metric"
                },
                "properties": {
                    "title": "properties",
                    "type": "object",
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "title": "properties",
                                "type": [
                                    "string",
                                    "null"
                                ]
                            }
                        ]
                    }
                },
                "resources": {
                    "type": "object",
                    "$ref": "#/definitions/ResourceConfigurationSchema"
                },
                "$schema": {
                    "title": "$schema",
                    "type": "string",
                    "readonly": true
                },
                "services": {
                    "title": "services",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "$ref": "#/definitions/JobServiceSchema"
                    }
                },
                "status": {
                    "title": "status",
                    "type": "string",
                    "readonly": true
                },
                "tags": {
                    "title": "tags",
                    "type": "object",
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "title": "tags",
                                "type": [
                                    "string",
                                    "null"
                                ]
                            }
                        ]
                    }
                },
                "target_column_name": {
                    "title": "target_column_name",
                    "type": "string"
                },
                "task": {
                    "type": "string",
                    "enum": [
                        "classification"
                    ],
                    "title": "task"
                },
                "test_data": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "title": "test_data",
                            "type": "string"
                        },
                        {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                },
                                {
                                    "type": "string",
                                    "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                },
                                {
                                    "type": "object",
                                    "$ref": "#/definitions/InputSchema"
                                },
                                {
                                    "title": "test_data",
                                    "type": "object",
                                    "additionalProperties": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                            },
                                            {
                                                "type": "string",
                                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                            },
                                            {
                                                "type": "object",
                                                "$ref": "#/definitions/InputSchema"
                                            },
                                            {
                                                "type": "object",
                                                "$ref": "#/definitions/InputLiteralValueSchema"
                                            },
                                            {
                                                "title": "test_data",
                                                "type": "number",
                                                "format": "integer"
                                            },
                                            {
                                                "title": "test_data",
                                                "type": "string"
                                            },
                                            {
                                                "title": "test_data",
                                                "type": "boolean"
                                            },
                                            {
                                                "title": "test_data",
                                                "type": "number",
                                                "format": "float"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    ]
                },
                "test_data_size": {
                    "title": "test_data_size",
                    "type": "number",
                    "format": "float"
                },
                "training": {
                    "type": "object",
                    "$ref": "#/definitions/ClassificationTrainingSettingsSchema",
                    "title": "training"
                },
                "training_data": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "title": "training_data",
                            "type": "string"
                        },
                        {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                },
                                {
                                    "type": "string",
                                    "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                },
                                {
                                    "type": "object",
                                    "$ref": "#/definitions/InputSchema"
                                },
                                {
                                    "title": "training_data",
                                    "type": "object",
                                    "additionalProperties": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                            },
                                            {
                                                "type": "string",
                                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                            },
                                            {
                                                "type": "object",
                                                "$ref": "#/definitions/InputSchema"
                                            },
                                            {
                                                "type": "object",
                                                "$ref": "#/definitions/InputLiteralValueSchema"
                                            },
                                            {
                                                "title": "training_data",
                                                "type": "number",
                                                "format": "integer"
                                            },
                                            {
                                                "title": "training_data",
                                                "type": "string"
                                            },
                                            {
                                                "title": "training_data",
                                                "type": "boolean"
                                            },
                                            {
                                                "title": "training_data",
                                                "type": "number",
                                                "format": "float"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    ]
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "automl"
                    ],
                    "title": "type"
                },
                "validation_data": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "title": "validation_data",
                            "type": "string"
                        },
                        {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                },
                                {
                                    "type": "string",
                                    "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                },
                                {
                                    "type": "object",
                                    "$ref": "#/definitions/InputSchema"
                                },
                                {
                                    "title": "validation_data",
                                    "type": "object",
                                    "additionalProperties": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                            },
                                            {
                                                "type": "string",
                                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                            },
                                            {
                                                "type": "object",
                                                "$ref": "#/definitions/InputSchema"
                                            },
                                            {
                                                "type": "object",
                                                "$ref": "#/definitions/InputLiteralValueSchema"
                                            },
                                            {
                                                "title": "validation_data",
                                                "type": "number",
                                                "format": "integer"
                                            },
                                            {
                                                "title": "validation_data",
                                                "type": "string"
                                            },
                                            {
                                                "title": "validation_data",
                                                "type": "boolean"
                                            },
                                            {
                                                "title": "validation_data",
                                                "type": "number",
                                                "format": "float"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    ]
                },
                "validation_data_size": {
                    "title": "validation_data_size",
                    "type": "number",
                    "format": "float"
                },
                "weight_column_name": {
                    "title": "weight_column_name",
                    "type": "string"
                }
            },
            "additionalProperties": false
        },
        "TableFeaturizationSettingsSchema": {
            "type": "object",
            "properties": {
                "blocked_transformers": {
                    "title": "blocked_transformers",
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                                "title": "blocked_transformers"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                                "title": "blocked_transformers"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                                "title": "blocked_transformers"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                                "title": "blocked_transformers"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                                "title": "blocked_transformers"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                                "title": "blocked_transformers"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                                "title": "blocked_transformers"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                                "title": "blocked_transformers"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                                "title": "blocked_transformers"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                                "title": "blocked_transformers"
                            },
                            {
                                "title": "blocked_transformers",
                                "type": "string"
                            }
                        ]
                    }
                },
                "column_name_and_types": {
                    "title": "column_name_and_types",
                    "type": "object",
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                                "title": "column_name_and_types"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                                "title": "column_name_and_types"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                                "title": "column_name_and_types"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                                "title": "column_name_and_types"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                                "title": "column_name_and_types"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                                "title": "column_name_and_types"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                                "title": "column_name_and_types"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                                "title": "column_name_and_types"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                                "title": "column_name_and_types"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                                "title": "column_name_and_types"
                            },
                            {
                                "title": "column_name_and_types",
                                "type": "string"
                            }
                        ]
                    }
                },
                "dataset_language": {
                    "title": "dataset_language",
                    "type": "string"
                },
                "enable_dnn_featurization": {
                    "title": "enable_dnn_featurization",
                    "type": "boolean"
                },
                "mode": {
                    "type": "string",
                    "enum": [
                        "auto",
                        "off",
                        "custom"
                    ],
                    "title": "mode"
                },
                "transformer_params": {
                    "title": "transformer_params",
                    "type": "object",
                    "additionalProperties": {
                        "title": "transformer_params",
                        "type": "array",
                        "items": {
                            "type": "object",
                            "$ref": "#/definitions/ColumnTransformerSchema"
                        }
                    }
                }
            },
            "additionalProperties": false
        },
        "ColumnTransformerSchema": {
            "type": "object",
            "properties": {
                "fields": {
                    "title": "fields",
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "title": "fields",
                                "type": "string"
                            }
                        ]
                    }
                },
                "parameters": {
                    "title": "parameters",
                    "type": "object",
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "title": "parameters",
                                "type": "number",
                                "format": "float"
                            },
                            {
                                "title": "parameters",
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                }
            },
            "additionalProperties": false
        },
        "AutoMLTableLimitsSchema": {
            "type": "object",
            "properties": {
                "enable_early_termination": {
                    "title": "enable_early_termination",
                    "type": "boolean"
                },
                "exit_score": {
                    "title": "exit_score",
                    "type": "number",
                    "format": "float"
                },
                "max_concurrent_trials": {
                    "title": "max_concurrent_trials",
                    "type": "number",
                    "format": "integer"
                },
                "max_cores_per_trial": {
                    "title": "max_cores_per_trial",
                    "type": "number",
                    "format": "integer"
                },
                "max_trials": {
                    "title": "max_trials",
                    "type": "number",
                    "format": "integer"
                },
                "timeout_minutes": {
                    "title": "timeout_minutes",
                    "type": "number",
                    "format": "integer"
                },
                "trial_timeout_minutes": {
                    "title": "trial_timeout_minutes",
                    "type": "number",
                    "format": "integer"
                }
            },
            "additionalProperties": false
        },
        "ClassificationTrainingSettingsSchema": {
            "type": "object",
            "properties": {
                "allowed_training_algorithms": {
                    "title": "allowed_training_algorithms",
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                                "title": "allowed_training_algorithms"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                                "title": "allowed_training_algorithms"
                            },
                            {
                                "type": "string",
                                "enum": [
                                    "logistic_regression",
                                    "sgd",
                                    "multinomial_naive_bayes",
                                    "bernoulli_naive_bayes",
                                    "svm",
                                    "linear_svm",
                                    "knn",
                                    "decision_tree",
                                    "random_forest",
                                    "extreme_random_trees",
                                    "light_gbm",
                                    "gradient_boosting",
                                    "xg_boost_classifier"
                                ],
                                "title": "allowed_training_algorithms"
                            }
                        ]
                    }
                },
                "blocked_training_algorithms": {
                    "title": "blocked_training_algorithms",
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                                "title": "blocked_training_algorithms"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                                "title": "blocked_training_algorithms"
                            },
                            {
                                "type": "string",
                                "enum": [
                                    "logistic_regression",
                                    "sgd",
                                    "multinomial_naive_bayes",
                                    "bernoulli_naive_bayes",
                                    "svm",
                                    "linear_svm",
                                    "knn",
                                    "decision_tree",
                                    "random_forest",
                                    "extreme_random_trees",
                                    "light_gbm",
                                    "gradient_boosting",
                                    "xg_boost_classifier"
                                ],
                                "title": "blocked_training_algorithms"
                            }
                        ]
                    }
                },
                "enable_dnn_training": {
                    "title": "enable_dnn_training",
                    "type": "boolean"
                },
                "enable_model_explainability": {
                    "title": "enable_model_explainability",
                    "type": "boolean"
                },
                "enable_onnx_compatible_models": {
                    "title": "enable_onnx_compatible_models",
                    "type": "boolean"
                },
                "enable_stack_ensemble": {
                    "title": "enable_stack_ensemble",
                    "type": "boolean"
                },
                "enable_vote_ensemble": {
                    "title": "enable_vote_ensemble",
                    "type": "boolean"
                },
                "ensemble_model_download_timeout_minutes": {
                    "title": "ensemble_model_download_timeout_minutes",
                    "type": "number",
                    "format": "integer"
                },
                "stack_ensemble_settings": {
                    "type": "object",
                    "$ref": "#/definitions/StackEnsembleSettingsSchema"
                }
            },
            "additionalProperties": false
        },
        "StackEnsembleSettingsSchema": {
            "type": "object",
            "properties": {
                "stack_meta_learner_kwargs": {
                    "title": "stack_meta_learner_kwargs",
                    "type": "object",
                    "additionalProperties": {}
                },
                "stack_meta_learner_train_percentage": {
                    "title": "stack_meta_learner_train_percentage",
                    "type": "number",
                    "format": "float"
                },
                "stack_meta_learner_type": {
                    "type": "string",
                    "enum": [
                        "none",
                        "logistic_regression",
                        "logistic_regression_cv",
                        "light_gbm_classifier",
                        "elastic_net",
                        "elastic_net_cv",
                        "light_gbm_regressor",
                        "linear_regression"
                    ],
                    "title": "stack_meta_learner_type"
                }
            },
            "additionalProperties": false
        },
        "AutoMLRegressionNodeSchema": {
            "required": [
                "target_column_name",
                "task",
                "type"
            ],
            "type": "object",
            "properties": {
                "compute": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "enum": [
                                "local"
                            ],
                            "title": "compute"
                        },
                        {
                            "type": "string",
                            "pattern": "^azureml:.*",
                            "arm_type": "computes",
                            "title": "compute"
                        },
                        {
                            "title": "compute",
                            "type": "string"
                        }
                    ]
                },
                "creation_context": {
                    "type": "object",
                    "$ref": "#/definitions/CreationContextSchema"
                },
                "cv_split_column_names": {
                    "title": "cv_split_column_names",
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "title": "cv_split_column_names",
                                "type": "string"
                            }
                        ]
                    }
                },
                "description": {
                    "title": "description",
                    "type": "string"
                },
                "display_name": {
                    "title": "display_name",
                    "type": "string"
                },
                "environment_id": {
                    "title": "environment_id",
                    "type": "string"
                },
                "environment_variables": {
                    "title": "environment_variables",
                    "type": "object",
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "title": "environment_variables",
                                "type": "string"
                            }
                        ]
                    }
                },
                "experiment_name": {
                    "title": "experiment_name",
                    "type": "string"
                },
                "featurization": {
                    "type": "object",
                    "$ref": "#/definitions/TableFeaturizationSettingsSchema",
                    "title": "featurization"
                },
                "id": {
                    "type": "string",
                    "pattern": "^azureml:.*",
                    "arm_type": "jobs",
                    "title": "id",
                    "readonly": true
                },
                "identity": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/ManagedIdentitySchema"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/AMLTokenIdentitySchema"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/UserIdentitySchema"
                        }
                    ]
                },
                "limits": {
                    "type": "object",
                    "$ref": "#/definitions/AutoMLTableLimitsSchema",
                    "title": "limits"
                },
                "log_files": {
                    "title": "log_files",
                    "type": "object",
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "title": "log_files",
                                "type": "string"
                            }
                        ]
                    }
                },
                "log_verbosity": {
                    "type": "string",
                    "enum": [
                        "not_set",
                        "debug",
                        "info",
                        "warning",
                        "error",
                        "critical"
                    ],
                    "title": "log_verbosity"
                },
                "n_cross_validations": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "enum": [
                                "auto"
                            ],
                            "title": "n_cross_validations"
                        },
                        {
                            "title": "n_cross_validations",
                            "type": "number",
                            "format": "integer"
                        }
                    ]
                },
                "name": {
                    "title": "name",
                    "type": "string"
                },
                "outputs": {
                    "title": "outputs",
                    "type": "object",
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "object",
                                "$ref": "#/definitions/OutputSchema"
                            },
                            {
                                "type": "string",
                                "pattern": "^\\$\\{\\{parent\\.outputs\\.(.*?)\\}\\}$",
                                "title": "outputs"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "primary_metric": {
                    "type": "string",
                    "enum": [
                        "spearman_correlation",
                        "normalized_root_mean_squared_error",
                        "r2_score",
                        "normalized_mean_absolute_error"
                    ],
                    "title": "primary_metric"
                },
                "properties": {
                    "title": "properties",
                    "type": "object",
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "title": "properties",
                                "type": [
                                    "string",
                                    "null"
                                ]
                            }
                        ]
                    }
                },
                "resources": {
                    "type": "object",
                    "$ref": "#/definitions/ResourceConfigurationSchema"
                },
                "$schema": {
                    "title": "$schema",
                    "type": "string",
                    "readonly": true
                },
                "services": {
                    "title": "services",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "$ref": "#/definitions/JobServiceSchema"
                    }
                },
                "status": {
                    "title": "status",
                    "type": "string",
                    "readonly": true
                },
                "tags": {
                    "title": "tags",
                    "type": "object",
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "title": "tags",
                                "type": [
                                    "string",
                                    "null"
                                ]
                            }
                        ]
                    }
                },
                "target_column_name": {
                    "title": "target_column_name",
                    "type": "string"
                },
                "task": {
                    "type": "string",
                    "enum": [
                        "regression"
                    ],
                    "title": "task"
                },
                "test_data": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "title": "test_data",
                            "type": "string"
                        },
                        {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                },
                                {
                                    "type": "string",
                                    "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                },
                                {
                                    "type": "object",
                                    "$ref": "#/definitions/InputSchema"
                                },
                                {
                                    "title": "test_data",
                                    "type": "object",
                                    "additionalProperties": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                            },
                                            {
                                                "type": "string",
                                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                            },
                                            {
                                                "type": "object",
                                                "$ref": "#/definitions/InputSchema"
                                            },
                                            {
                                                "type": "object",
                                                "$ref": "#/definitions/InputLiteralValueSchema"
                                            },
                                            {
                                                "title": "test_data",
                                                "type": "number",
                                                "format": "integer"
                                            },
                                            {
                                                "title": "test_data",
                                                "type": "string"
                                            },
                                            {
                                                "title": "test_data",
                                                "type": "boolean"
                                            },
                                            {
                                                "title": "test_data",
                                                "type": "number",
                                                "format": "float"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    ]
                },
                "test_data_size": {
                    "title": "test_data_size",
                    "type": "number",
                    "format": "float"
                },
                "training": {
                    "type": "object",
                    "$ref": "#/definitions/RegressionTrainingSettingsSchema",
                    "title": "training"
                },
                "training_data": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "title": "training_data",
                            "type": "string"
                        },
                        {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                },
                                {
                                    "type": "string",
                                    "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                },
                                {
                                    "type": "object",
                                    "$ref": "#/definitions/InputSchema"
                                },
                                {
                                    "title": "training_data",
                                    "type": "object",
                                    "additionalProperties": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                            },
                                            {
                                                "type": "string",
                                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                            },
                                            {
                                                "type": "object",
                                                "$ref": "#/definitions/InputSchema"
                                            },
                                            {
                                                "type": "object",
                                                "$ref": "#/definitions/InputLiteralValueSchema"
                                            },
                                            {
                                                "title": "training_data",
                                                "type": "number",
                                                "format": "integer"
                                            },
                                            {
                                                "title": "training_data",
                                                "type": "string"
                                            },
                                            {
                                                "title": "training_data",
                                                "type": "boolean"
                                            },
                                            {
                                                "title": "training_data",
                                                "type": "number",
                                                "format": "float"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    ]
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "automl"
                    ],
                    "title": "type"
                },
                "validation_data": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "title": "validation_data",
                            "type": "string"
                        },
                        {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                },
                                {
                                    "type": "string",
                                    "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                },
                                {
                                    "type": "object",
                                    "$ref": "#/definitions/InputSchema"
                                },
                                {
                                    "title": "validation_data",
                                    "type": "object",
                                    "additionalProperties": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                            },
                                            {
                                                "type": "string",
                                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                            },
                                            {
                                                "type": "object",
                                                "$ref": "#/definitions/InputSchema"
                                            },
                                            {
                                                "type": "object",
                                                "$ref": "#/definitions/InputLiteralValueSchema"
                                            },
                                            {
                                                "title": "validation_data",
                                                "type": "number",
                                                "format": "integer"
                                            },
                                            {
                                                "title": "validation_data",
                                                "type": "string"
                                            },
                                            {
                                                "title": "validation_data",
                                                "type": "boolean"
                                            },
                                            {
                                                "title": "validation_data",
                                                "type": "number",
                                                "format": "float"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    ]
                },
                "validation_data_size": {
                    "title": "validation_data_size",
                    "type": "number",
                    "format": "float"
                },
                "weight_column_name": {
                    "title": "weight_column_name",
                    "type": "string"
                }
            },
            "additionalProperties": false
        },
        "RegressionTrainingSettingsSchema": {
            "type": "object",
            "properties": {
                "allowed_training_algorithms": {
                    "title": "allowed_training_algorithms",
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                                "title": "allowed_training_algorithms"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                                "title": "allowed_training_algorithms"
                            },
                            {
                                "type": "string",
                                "enum": [
                                    "elastic_net",
                                    "gradient_boosting",
                                    "decision_tree",
                                    "knn",
                                    "lasso_lars",
                                    "sgd",
                                    "random_forest",
                                    "extreme_random_trees",
                                    "light_gbm",
                                    "xg_boost_regressor"
                                ],
                                "title": "allowed_training_algorithms"
                            }
                        ]
                    }
                },
                "blocked_training_algorithms": {
                    "title": "blocked_training_algorithms",
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                                "title": "blocked_training_algorithms"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                                "title": "blocked_training_algorithms"
                            },
                            {
                                "type": "string",
                                "enum": [
                                    "elastic_net",
                                    "gradient_boosting",
                                    "decision_tree",
                                    "knn",
                                    "lasso_lars",
                                    "sgd",
                                    "random_forest",
                                    "extreme_random_trees",
                                    "light_gbm",
                                    "xg_boost_regressor"
                                ],
                                "title": "blocked_training_algorithms"
                            }
                        ]
                    }
                },
                "enable_dnn_training": {
                    "title": "enable_dnn_training",
                    "type": "boolean"
                },
                "enable_model_explainability": {
                    "title": "enable_model_explainability",
                    "type": "boolean"
                },
                "enable_onnx_compatible_models": {
                    "title": "enable_onnx_compatible_models",
                    "type": "boolean"
                },
                "enable_stack_ensemble": {
                    "title": "enable_stack_ensemble",
                    "type": "boolean"
                },
                "enable_vote_ensemble": {
                    "title": "enable_vote_ensemble",
                    "type": "boolean"
                },
                "ensemble_model_download_timeout_minutes": {
                    "title": "ensemble_model_download_timeout_minutes",
                    "type": "number",
                    "format": "integer"
                },
                "stack_ensemble_settings": {
                    "type": "object",
                    "$ref": "#/definitions/StackEnsembleSettingsSchema"
                }
            },
            "additionalProperties": false
        },
        "AutoMLForecastingNodeSchema": {
            "required": [
                "target_column_name",
                "task",
                "type"
            ],
            "type": "object",
            "properties": {
                "compute": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "enum": [
                                "local"
                            ],
                            "title": "compute"
                        },
                        {
                            "type": "string",
                            "pattern": "^azureml:.*",
                            "arm_type": "computes",
                            "title": "compute"
                        },
                        {
                            "title": "compute",
                            "type": "string"
                        }
                    ]
                },
                "creation_context": {
                    "type": "object",
                    "$ref": "#/definitions/CreationContextSchema"
                },
                "cv_split_column_names": {
                    "title": "cv_split_column_names",
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "title": "cv_split_column_names",
                                "type": "string"
                            }
                        ]
                    }
                },
                "description": {
                    "title": "description",
                    "type": "string"
                },
                "display_name": {
                    "title": "display_name",
                    "type": "string"
                },
                "environment_id": {
                    "title": "environment_id",
                    "type": "string"
                },
                "environment_variables": {
                    "title": "environment_variables",
                    "type": "object",
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "title": "environment_variables",
                                "type": "string"
                            }
                        ]
                    }
                },
                "experiment_name": {
                    "title": "experiment_name",
                    "type": "string"
                },
                "featurization": {
                    "type": "object",
                    "$ref": "#/definitions/TableFeaturizationSettingsSchema",
                    "title": "featurization"
                },
                "forecasting": {
                    "type": "object",
                    "$ref": "#/definitions/ForecastingSettingsSchema",
                    "title": "forecasting"
                },
                "id": {
                    "type": "string",
                    "pattern": "^azureml:.*",
                    "arm_type": "jobs",
                    "title": "id",
                    "readonly": true
                },
                "identity": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/ManagedIdentitySchema"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/AMLTokenIdentitySchema"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/UserIdentitySchema"
                        }
                    ]
                },
                "limits": {
                    "type": "object",
                    "$ref": "#/definitions/AutoMLTableLimitsSchema",
                    "title": "limits"
                },
                "log_files": {
                    "title": "log_files",
                    "type": "object",
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "title": "log_files",
                                "type": "string"
                            }
                        ]
                    }
                },
                "log_verbosity": {
                    "type": "string",
                    "enum": [
                        "not_set",
                        "debug",
                        "info",
                        "warning",
                        "error",
                        "critical"
                    ],
                    "title": "log_verbosity"
                },
                "n_cross_validations": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "enum": [
                                "auto"
                            ],
                            "title": "n_cross_validations"
                        },
                        {
                            "title": "n_cross_validations",
                            "type": "number",
                            "format": "integer"
                        }
                    ]
                },
                "name": {
                    "title": "name",
                    "type": "string"
                },
                "outputs": {
                    "title": "outputs",
                    "type": "object",
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "object",
                                "$ref": "#/definitions/OutputSchema"
                            },
                            {
                                "type": "string",
                                "pattern": "^\\$\\{\\{parent\\.outputs\\.(.*?)\\}\\}$",
                                "title": "outputs"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "primary_metric": {
                    "type": "string",
                    "enum": [
                        "spearman_correlation",
                        "normalized_root_mean_squared_error",
                        "r2_score",
                        "normalized_mean_absolute_error"
                    ],
                    "title": "primary_metric"
                },
                "properties": {
                    "title": "properties",
                    "type": "object",
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "title": "properties",
                                "type": [
                                    "string",
                                    "null"
                                ]
                            }
                        ]
                    }
                },
                "resources": {
                    "type": "object",
                    "$ref": "#/definitions/ResourceConfigurationSchema"
                },
                "$schema": {
                    "title": "$schema",
                    "type": "string",
                    "readonly": true
                },
                "services": {
                    "title": "services",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "$ref": "#/definitions/JobServiceSchema"
                    }
                },
                "status": {
                    "title": "status",
                    "type": "string",
                    "readonly": true
                },
                "tags": {
                    "title": "tags",
                    "type": "object",
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "title": "tags",
                                "type": [
                                    "string",
                                    "null"
                                ]
                            }
                        ]
                    }
                },
                "target_column_name": {
                    "title": "target_column_name",
                    "type": "string"
                },
                "task": {
                    "type": "string",
                    "enum": [
                        "forecasting"
                    ],
                    "title": "task"
                },
                "test_data": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "title": "test_data",
                            "type": "string"
                        },
                        {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                },
                                {
                                    "type": "string",
                                    "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                },
                                {
                                    "type": "object",
                                    "$ref": "#/definitions/InputSchema"
                                },
                                {
                                    "title": "test_data",
                                    "type": "object",
                                    "additionalProperties": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                            },
                                            {
                                                "type": "string",
                                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                            },
                                            {
                                                "type": "object",
                                                "$ref": "#/definitions/InputSchema"
                                            },
                                            {
                                                "type": "object",
                                                "$ref": "#/definitions/InputLiteralValueSchema"
                                            },
                                            {
                                                "title": "test_data",
                                                "type": "number",
                                                "format": "integer"
                                            },
                                            {
                                                "title": "test_data",
                                                "type": "string"
                                            },
                                            {
                                                "title": "test_data",
                                                "type": "boolean"
                                            },
                                            {
                                                "title": "test_data",
                                                "type": "number",
                                                "format": "float"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    ]
                },
                "test_data_size": {
                    "title": "test_data_size",
                    "type": "number",
                    "format": "float"
                },
                "training": {
                    "type": "object",
                    "$ref": "#/definitions/ForecastingTrainingSettingsSchema",
                    "title": "training"
                },
                "training_data": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "title": "training_data",
                            "type": "string"
                        },
                        {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                },
                                {
                                    "type": "string",
                                    "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                },
                                {
                                    "type": "object",
                                    "$ref": "#/definitions/InputSchema"
                                },
                                {
                                    "title": "training_data",
                                    "type": "object",
                                    "additionalProperties": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                            },
                                            {
                                                "type": "string",
                                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                            },
                                            {
                                                "type": "object",
                                                "$ref": "#/definitions/InputSchema"
                                            },
                                            {
                                                "type": "object",
                                                "$ref": "#/definitions/InputLiteralValueSchema"
                                            },
                                            {
                                                "title": "training_data",
                                                "type": "number",
                                                "format": "integer"
                                            },
                                            {
                                                "title": "training_data",
                                                "type": "string"
                                            },
                                            {
                                                "title": "training_data",
                                                "type": "boolean"
                                            },
                                            {
                                                "title": "training_data",
                                                "type": "number",
                                                "format": "float"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    ]
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "automl"
                    ],
                    "title": "type"
                },
                "validation_data": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "title": "validation_data",
                            "type": "string"
                        },
                        {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                },
                                {
                                    "type": "string",
                                    "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                },
                                {
                                    "type": "object",
                                    "$ref": "#/definitions/InputSchema"
                                },
                                {
                                    "title": "validation_data",
                                    "type": "object",
                                    "additionalProperties": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                            },
                                            {
                                                "type": "string",
                                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                            },
                                            {
                                                "type": "object",
                                                "$ref": "#/definitions/InputSchema"
                                            },
                                            {
                                                "type": "object",
                                                "$ref": "#/definitions/InputLiteralValueSchema"
                                            },
                                            {
                                                "title": "validation_data",
                                                "type": "number",
                                                "format": "integer"
                                            },
                                            {
                                                "title": "validation_data",
                                                "type": "string"
                                            },
                                            {
                                                "title": "validation_data",
                                                "type": "boolean"
                                            },
                                            {
                                                "title": "validation_data",
                                                "type": "number",
                                                "format": "float"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    ]
                },
                "validation_data_size": {
                    "title": "validation_data_size",
                    "type": "number",
                    "format": "float"
                },
                "weight_column_name": {
                    "title": "weight_column_name",
                    "type": "string"
                }
            },
            "additionalProperties": false
        },
        "ForecastingSettingsSchema": {
            "type": "object",
            "properties": {
                "country_or_region_for_holidays": {
                    "title": "country_or_region_for_holidays",
                    "type": "string"
                },
                "cv_step_size": {
                    "title": "cv_step_size",
                    "type": "number",
                    "format": "integer"
                },
                "feature_lags": {
                    "type": "string",
                    "enum": [
                        "none",
                        "auto"
                    ],
                    "title": "feature_lags"
                },
                "forecast_horizon": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                            "title": "forecast_horizon"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                            "title": "forecast_horizon"
                        },
                        {
                            "type": "string",
                            "enum": [
                                "auto"
                            ],
                            "title": "forecast_horizon"
                        },
                        {
                            "title": "forecast_horizon",
                            "type": "number",
                            "format": "integer"
                        }
                    ]
                },
                "frequency": {
                    "title": "frequency",
                    "type": "string"
                },
                "seasonality": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                            "title": "seasonality"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                            "title": "seasonality"
                        },
                        {
                            "type": "string",
                            "enum": [
                                "auto"
                            ],
                            "title": "seasonality"
                        },
                        {
                            "title": "seasonality",
                            "type": "number",
                            "format": "integer"
                        }
                    ]
                },
                "short_series_handling_config": {
                    "type": "string",
                    "enum": [
                        "none",
                        "auto",
                        "pad",
                        "drop"
                    ],
                    "title": "short_series_handling_config"
                },
                "target_aggregate_function": {
                    "type": "string",
                    "enum": [
                        "none",
                        "sum",
                        "max",
                        "min",
                        "mean"
                    ],
                    "title": "target_aggregate_function"
                },
                "target_lags": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                            "title": "target_lags"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                            "title": "target_lags"
                        },
                        {
                            "type": "string",
                            "enum": [
                                "auto"
                            ],
                            "title": "target_lags"
                        },
                        {
                            "title": "target_lags",
                            "type": "number",
                            "format": "integer"
                        },
                        {
                            "title": "target_lags",
                            "type": "array",
                            "items": {
                                "anyOf": [
                                    {
                                        "type": "string",
                                        "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                    },
                                    {
                                        "type": "string",
                                        "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                    },
                                    {
                                        "type": "string",
                                        "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                                        "title": "target_lags"
                                    },
                                    {
                                        "type": "string",
                                        "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                                        "title": "target_lags"
                                    },
                                    {
                                        "title": "target_lags",
                                        "type": "number",
                                        "format": "integer"
                                    }
                                ]
                            }
                        }
                    ]
                },
                "target_rolling_window_size": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                            "title": "target_rolling_window_size"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                            "title": "target_rolling_window_size"
                        },
                        {
                            "type": "string",
                            "enum": [
                                "auto"
                            ],
                            "title": "target_rolling_window_size"
                        },
                        {
                            "title": "target_rolling_window_size",
                            "type": "number",
                            "format": "integer"
                        }
                    ]
                },
                "time_column_name": {
                    "title": "time_column_name",
                    "type": "string"
                },
                "time_series_id_column_names": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                            "title": "time_series_id_column_names"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                            "title": "time_series_id_column_names"
                        },
                        {
                            "title": "time_series_id_column_names",
                            "type": "string"
                        },
                        {
                            "title": "time_series_id_column_names",
                            "type": "array",
                            "items": {
                                "anyOf": [
                                    {
                                        "type": "string",
                                        "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                    },
                                    {
                                        "type": "string",
                                        "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                    },
                                    {
                                        "type": "string",
                                        "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                                        "title": "time_series_id_column_names"
                                    },
                                    {
                                        "type": "string",
                                        "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                                        "title": "time_series_id_column_names"
                                    },
                                    {
                                        "title": "time_series_id_column_names",
                                        "type": "string"
                                    }
                                ]
                            }
                        }
                    ]
                },
                "use_stl": {
                    "type": "string",
                    "enum": [
                        "none",
                        "season",
                        "seasontrend"
                    ],
                    "title": "use_stl"
                }
            },
            "additionalProperties": false
        },
        "ForecastingTrainingSettingsSchema": {
            "type": "object",
            "properties": {
                "allowed_training_algorithms": {
                    "title": "allowed_training_algorithms",
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                                "title": "allowed_training_algorithms"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                                "title": "allowed_training_algorithms"
                            },
                            {
                                "type": "string",
                                "enum": [
                                    "auto_arima",
                                    "prophet",
                                    "naive",
                                    "seasonal_naive",
                                    "average",
                                    "seasonal_average",
                                    "exponential_smoothing",
                                    "arimax",
                                    "tcn_forecaster",
                                    "elastic_net",
                                    "gradient_boosting",
                                    "decision_tree",
                                    "knn",
                                    "lasso_lars",
                                    "sgd",
                                    "random_forest",
                                    "extreme_random_trees",
                                    "light_gbm",
                                    "xg_boost_regressor"
                                ],
                                "title": "allowed_training_algorithms"
                            }
                        ]
                    }
                },
                "blocked_training_algorithms": {
                    "title": "blocked_training_algorithms",
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                                "title": "blocked_training_algorithms"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                                "title": "blocked_training_algorithms"
                            },
                            {
                                "type": "string",
                                "enum": [
                                    "auto_arima",
                                    "prophet",
                                    "naive",
                                    "seasonal_naive",
                                    "average",
                                    "seasonal_average",
                                    "exponential_smoothing",
                                    "arimax",
                                    "tcn_forecaster",
                                    "elastic_net",
                                    "gradient_boosting",
                                    "decision_tree",
                                    "knn",
                                    "lasso_lars",
                                    "sgd",
                                    "random_forest",
                                    "extreme_random_trees",
                                    "light_gbm",
                                    "xg_boost_regressor"
                                ],
                                "title": "blocked_training_algorithms"
                            }
                        ]
                    }
                },
                "enable_dnn_training": {
                    "title": "enable_dnn_training",
                    "type": "boolean"
                },
                "enable_model_explainability": {
                    "title": "enable_model_explainability",
                    "type": "boolean"
                },
                "enable_onnx_compatible_models": {
                    "title": "enable_onnx_compatible_models",
                    "type": "boolean"
                },
                "enable_stack_ensemble": {
                    "title": "enable_stack_ensemble",
                    "type": "boolean"
                },
                "enable_vote_ensemble": {
                    "title": "enable_vote_ensemble",
                    "type": "boolean"
                },
                "ensemble_model_download_timeout_minutes": {
                    "title": "ensemble_model_download_timeout_minutes",
                    "type": "number",
                    "format": "integer"
                },
                "stack_ensemble_settings": {
                    "type": "object",
                    "$ref": "#/definitions/StackEnsembleSettingsSchema"
                }
            },
            "additionalProperties": false
        },
        "ImageClassificationMulticlassNodeSchema": {
            "required": [
                "target_column_name",
                "task",
                "type"
            ],
            "type": "object",
            "properties": {
                "compute": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "enum": [
                                "local"
                            ],
                            "title": "compute"
                        },
                        {
                            "type": "string",
                            "pattern": "^azureml:.*",
                            "arm_type": "computes",
                            "title": "compute"
                        },
                        {
                            "title": "compute",
                            "type": "string"
                        }
                    ]
                },
                "creation_context": {
                    "type": "object",
                    "$ref": "#/definitions/CreationContextSchema"
                },
                "description": {
                    "title": "description",
                    "type": "string"
                },
                "display_name": {
                    "title": "display_name",
                    "type": "string"
                },
                "environment_id": {
                    "title": "environment_id",
                    "type": "string"
                },
                "environment_variables": {
                    "title": "environment_variables",
                    "type": "object",
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "title": "environment_variables",
                                "type": "string"
                            }
                        ]
                    }
                },
                "experiment_name": {
                    "title": "experiment_name",
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "pattern": "^azureml:.*",
                    "arm_type": "jobs",
                    "title": "id",
                    "readonly": true
                },
                "identity": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/ManagedIdentitySchema"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/AMLTokenIdentitySchema"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/UserIdentitySchema"
                        }
                    ]
                },
                "image_model": {
                    "type": "object",
                    "$ref": "#/definitions/ImageModelSettingsClassificationSchema"
                },
                "limits": {
                    "type": "object",
                    "$ref": "#/definitions/ImageLimitsSchema"
                },
                "log_files": {
                    "title": "log_files",
                    "type": "object",
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "title": "log_files",
                                "type": "string"
                            }
                        ]
                    }
                },
                "log_verbosity": {
                    "type": "string",
                    "enum": [
                        "not_set",
                        "debug",
                        "info",
                        "warning",
                        "error",
                        "critical"
                    ],
                    "title": "log_verbosity"
                },
                "name": {
                    "title": "name",
                    "type": "string"
                },
                "outputs": {
                    "title": "outputs",
                    "type": "object",
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "object",
                                "$ref": "#/definitions/OutputSchema"
                            },
                            {
                                "type": "string",
                                "pattern": "^\\$\\{\\{parent\\.outputs\\.(.*?)\\}\\}$",
                                "title": "outputs"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "primary_metric": {
                    "type": "string",
                    "enum": [
                        "auc_weighted",
                        "accuracy",
                        "norm_macro_recall",
                        "average_precision_score_weighted",
                        "precision_score_weighted"
                    ],
                    "title": "primary_metric"
                },
                "properties": {
                    "title": "properties",
                    "type": "object",
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "title": "properties",
                                "type": [
                                    "string",
                                    "null"
                                ]
                            }
                        ]
                    }
                },
                "resources": {
                    "type": "object",
                    "$ref": "#/definitions/ResourceConfigurationSchema"
                },
                "$schema": {
                    "title": "$schema",
                    "type": "string",
                    "readonly": true
                },
                "search_space": {
                    "title": "search_space",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "$ref": "#/definitions/ImageModelDistributionSettingsClassificationSchema"
                    }
                },
                "services": {
                    "title": "services",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "$ref": "#/definitions/JobServiceSchema"
                    }
                },
                "status": {
                    "title": "status",
                    "type": "string",
                    "readonly": true
                },
                "sweep": {
                    "type": "object",
                    "$ref": "#/definitions/ImageSweepSettingsSchema"
                },
                "tags": {
                    "title": "tags",
                    "type": "object",
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "title": "tags",
                                "type": [
                                    "string",
                                    "null"
                                ]
                            }
                        ]
                    }
                },
                "target_column_name": {
                    "title": "target_column_name",
                    "type": "string"
                },
                "task": {
                    "type": "string",
                    "enum": [
                        "image_classification"
                    ],
                    "title": "task"
                },
                "test_data": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/InputSchema"
                        },
                        {
                            "title": "test_data",
                            "type": "object",
                            "additionalProperties": {
                                "anyOf": [
                                    {
                                        "type": "string",
                                        "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                    },
                                    {
                                        "type": "string",
                                        "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                    },
                                    {
                                        "type": "object",
                                        "$ref": "#/definitions/InputSchema"
                                    },
                                    {
                                        "type": "object",
                                        "$ref": "#/definitions/InputLiteralValueSchema"
                                    },
                                    {
                                        "title": "test_data",
                                        "type": "number",
                                        "format": "integer"
                                    },
                                    {
                                        "title": "test_data",
                                        "type": "string"
                                    },
                                    {
                                        "title": "test_data",
                                        "type": "boolean"
                                    },
                                    {
                                        "title": "test_data",
                                        "type": "number",
                                        "format": "float"
                                    }
                                ]
                            }
                        }
                    ]
                },
                "test_data_size": {
                    "title": "test_data_size",
                    "type": "number",
                    "format": "float"
                },
                "training_data": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "title": "training_data",
                            "type": "string"
                        },
                        {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                },
                                {
                                    "type": "string",
                                    "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                },
                                {
                                    "type": "object",
                                    "$ref": "#/definitions/InputSchema"
                                },
                                {
                                    "title": "training_data",
                                    "type": "object",
                                    "additionalProperties": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                            },
                                            {
                                                "type": "string",
                                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                            },
                                            {
                                                "type": "object",
                                                "$ref": "#/definitions/InputSchema"
                                            },
                                            {
                                                "type": "object",
                                                "$ref": "#/definitions/InputLiteralValueSchema"
                                            },
                                            {
                                                "title": "training_data",
                                                "type": "number",
                                                "format": "integer"
                                            },
                                            {
                                                "title": "training_data",
                                                "type": "string"
                                            },
                                            {
                                                "title": "training_data",
                                                "type": "boolean"
                                            },
                                            {
                                                "title": "training_data",
                                                "type": "number",
                                                "format": "float"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    ]
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "automl"
                    ],
                    "title": "type"
                },
                "validation_data": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "title": "validation_data",
                            "type": "string"
                        },
                        {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                },
                                {
                                    "type": "string",
                                    "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                },
                                {
                                    "type": "object",
                                    "$ref": "#/definitions/InputSchema"
                                },
                                {
                                    "title": "validation_data",
                                    "type": "object",
                                    "additionalProperties": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                            },
                                            {
                                                "type": "string",
                                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                            },
                                            {
                                                "type": "object",
                                                "$ref": "#/definitions/InputSchema"
                                            },
                                            {
                                                "type": "object",
                                                "$ref": "#/definitions/InputLiteralValueSchema"
                                            },
                                            {
                                                "title": "validation_data",
                                                "type": "number",
                                                "format": "integer"
                                            },
                                            {
                                                "title": "validation_data",
                                                "type": "string"
                                            },
                                            {
                                                "title": "validation_data",
                                                "type": "boolean"
                                            },
                                            {
                                                "title": "validation_data",
                                                "type": "number",
                                                "format": "float"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    ]
                },
                "validation_data_size": {
                    "title": "validation_data_size",
                    "type": "number",
                    "format": "float"
                }
            },
            "additionalProperties": false
        },
        "ImageModelSettingsClassificationSchema": {
            "type": "object",
            "properties": {
                "advanced_settings": {
                    "title": "advanced_settings",
                    "type": "string"
                },
                "ams_gradient": {
                    "title": "ams_gradient",
                    "type": "boolean"
                },
                "augmentations": {
                    "title": "augmentations",
                    "type": "string"
                },
                "beta1": {
                    "title": "beta1",
                    "type": "number",
                    "format": "float"
                },
                "beta2": {
                    "title": "beta2",
                    "type": "number",
                    "format": "float"
                },
                "checkpoint_dataset_id": {
                    "title": "checkpoint_dataset_id",
                    "type": "string"
                },
                "checkpoint_filename": {
                    "title": "checkpoint_filename",
                    "type": "string"
                },
                "checkpoint_frequency": {
                    "title": "checkpoint_frequency",
                    "type": "number",
                    "format": "integer"
                },
                "checkpoint_run_id": {
                    "title": "checkpoint_run_id",
                    "type": "string"
                },
                "distributed": {
                    "title": "distributed",
                    "type": "boolean"
                },
                "early_stopping": {
                    "title": "early_stopping",
                    "type": "boolean"
                },
                "early_stopping_delay": {
                    "title": "early_stopping_delay",
                    "type": "number",
                    "format": "integer"
                },
                "early_stopping_patience": {
                    "title": "early_stopping_patience",
                    "type": "number",
                    "format": "integer"
                },
                "enable_onnx_normalization": {
                    "title": "enable_onnx_normalization",
                    "type": "boolean"
                },
                "evaluation_frequency": {
                    "title": "evaluation_frequency",
                    "type": "number",
                    "format": "integer"
                },
                "gradient_accumulation_step": {
                    "title": "gradient_accumulation_step",
                    "type": "number",
                    "format": "integer"
                },
                "layers_to_freeze": {
                    "title": "layers_to_freeze",
                    "type": "number",
                    "format": "integer"
                },
                "learning_rate": {
                    "title": "learning_rate",
                    "type": "number",
                    "format": "float"
                },
                "learning_rate_scheduler": {
                    "type": "string",
                    "enum": [
                        "none",
                        "warmupcosine",
                        "step"
                    ],
                    "title": "learning_rate_scheduler"
                },
                "model_name": {
                    "title": "model_name",
                    "type": "string"
                },
                "momentum": {
                    "title": "momentum",
                    "type": "number",
                    "format": "float"
                },
                "nesterov": {
                    "title": "nesterov",
                    "type": "boolean"
                },
                "number_of_epochs": {
                    "title": "number_of_epochs",
                    "type": "number",
                    "format": "integer"
                },
                "number_of_workers": {
                    "title": "number_of_workers",
                    "type": "number",
                    "format": "integer"
                },
                "optimizer": {
                    "type": "string",
                    "enum": [
                        "none",
                        "sgd",
                        "adam",
                        "adamw"
                    ],
                    "title": "optimizer"
                },
                "random_seed": {
                    "title": "random_seed",
                    "type": "number",
                    "format": "integer"
                },
                "split_ratio": {
                    "title": "split_ratio",
                    "type": "number",
                    "format": "float"
                },
                "step_lr_gamma": {
                    "title": "step_lr_gamma",
                    "type": "number",
                    "format": "float"
                },
                "step_lr_step_size": {
                    "title": "step_lr_step_size",
                    "type": "number",
                    "format": "integer"
                },
                "training_batch_size": {
                    "title": "training_batch_size",
                    "type": "number",
                    "format": "integer"
                },
                "training_crop_size": {
                    "title": "training_crop_size",
                    "type": "number",
                    "format": "integer"
                },
                "validation_batch_size": {
                    "title": "validation_batch_size",
                    "type": "number",
                    "format": "integer"
                },
                "validation_crop_size": {
                    "title": "validation_crop_size",
                    "type": "number",
                    "format": "integer"
                },
                "validation_resize_size": {
                    "title": "validation_resize_size",
                    "type": "number",
                    "format": "integer"
                },
                "warmup_cosine_lr_cycles": {
                    "title": "warmup_cosine_lr_cycles",
                    "type": "number",
                    "format": "float"
                },
                "warmup_cosine_lr_warmup_epochs": {
                    "title": "warmup_cosine_lr_warmup_epochs",
                    "type": "number",
                    "format": "integer"
                },
                "weight_decay": {
                    "title": "weight_decay",
                    "type": "number",
                    "format": "float"
                },
                "weighted_loss": {
                    "title": "weighted_loss",
                    "type": "number",
                    "format": "integer"
                }
            },
            "additionalProperties": false
        },
        "ImageLimitsSchema": {
            "type": "object",
            "properties": {
                "max_concurrent_trials": {
                    "title": "max_concurrent_trials",
                    "type": "number",
                    "format": "integer"
                },
                "max_trials": {
                    "title": "max_trials",
                    "type": "number",
                    "format": "integer"
                },
                "timeout_minutes": {
                    "title": "timeout_minutes",
                    "type": "number",
                    "format": "integer"
                }
            },
            "additionalProperties": false
        },
        "ImageModelDistributionSettingsClassificationSchema": {
            "type": "object",
            "properties": {
                "ams_gradient": {
                    "title": "ams_gradient",
                    "type": "string"
                },
                "augmentations": {
                    "title": "augmentations",
                    "type": "string"
                },
                "beta1": {
                    "title": "beta1",
                    "type": "string"
                },
                "beta2": {
                    "title": "beta2",
                    "type": "string"
                },
                "distributed": {
                    "title": "distributed",
                    "type": "string"
                },
                "early_stopping": {
                    "title": "early_stopping",
                    "type": "string"
                },
                "early_stopping_delay": {
                    "title": "early_stopping_delay",
                    "type": "string"
                },
                "early_stopping_patience": {
                    "title": "early_stopping_patience",
                    "type": "string"
                },
                "enable_onnx_normalization": {
                    "title": "enable_onnx_normalization",
                    "type": "string"
                },
                "evaluation_frequency": {
                    "title": "evaluation_frequency",
                    "type": "string"
                },
                "grad_accumulation_step": {
                    "title": "grad_accumulation_step",
                    "type": "string"
                },
                "layers_to_freeze": {
                    "title": "layers_to_freeze",
                    "type": "string"
                },
                "learning_rate": {
                    "title": "learning_rate",
                    "type": "string"
                },
                "learning_rate_scheduler": {
                    "title": "learning_rate_scheduler",
                    "type": "string"
                },
                "model_name": {
                    "title": "model_name",
                    "type": "string"
                },
                "momentum": {
                    "title": "momentum",
                    "type": "string"
                },
                "nesterov": {
                    "title": "nesterov",
                    "type": "string"
                },
                "number_of_epochs": {
                    "title": "number_of_epochs",
                    "type": "string"
                },
                "number_of_workers": {
                    "title": "number_of_workers",
                    "type": "string"
                },
                "optimizer": {
                    "title": "optimizer",
                    "type": "string"
                },
                "random_seed": {
                    "title": "random_seed",
                    "type": "string"
                },
                "split_ratio": {
                    "title": "split_ratio",
                    "type": "string"
                },
                "step_lr_gamma": {
                    "title": "step_lr_gamma",
                    "type": "string"
                },
                "step_lr_step_size": {
                    "title": "step_lr_step_size",
                    "type": "string"
                },
                "training_batch_size": {
                    "title": "training_batch_size",
                    "type": "string"
                },
                "training_crop_size": {
                    "title": "training_crop_size",
                    "type": "string"
                },
                "validation_batch_size": {
                    "title": "validation_batch_size",
                    "type": "string"
                },
                "validation_crop_size": {
                    "title": "validation_crop_size",
                    "type": "string"
                },
                "validation_resize_size": {
                    "title": "validation_resize_size",
                    "type": "string"
                },
                "warmup_cosine_lr_cycles": {
                    "title": "warmup_cosine_lr_cycles",
                    "type": "string"
                },
                "warmup_cosine_lr_warmup_epochs": {
                    "title": "warmup_cosine_lr_warmup_epochs",
                    "type": "string"
                },
                "weight_decay": {
                    "title": "weight_decay",
                    "type": "string"
                },
                "weighted_loss": {
                    "title": "weighted_loss",
                    "type": "string"
                }
            },
            "additionalProperties": false
        },
        "ImageSweepSettingsSchema": {
            "type": "object",
            "properties": {
                "early_termination": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                            "title": "early_termination"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                            "title": "early_termination"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                            "title": "early_termination"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                            "title": "early_termination"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                            "title": "early_termination"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                            "title": "early_termination"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                            "title": "early_termination"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                            "title": "early_termination"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                            "title": "early_termination"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                            "title": "early_termination"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                            "title": "early_termination"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                            "title": "early_termination"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                            "title": "early_termination"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                            "title": "early_termination"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/BanditPolicySchema"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/MedianStoppingPolicySchema"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/TruncationSelectionPolicySchema"
                        }
                    ]
                },
                "limits": {
                    "type": "object",
                    "$ref": "#/definitions/ImageSweepLimitSchema"
                },
                "sampling_algorithm": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                            "title": "sampling_algorithm"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                            "title": "sampling_algorithm"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                            "title": "sampling_algorithm"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                            "title": "sampling_algorithm"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                            "title": "sampling_algorithm"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                            "title": "sampling_algorithm"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                            "title": "sampling_algorithm"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                            "title": "sampling_algorithm"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                            "title": "sampling_algorithm"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                            "title": "sampling_algorithm"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                            "title": "sampling_algorithm"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                            "title": "sampling_algorithm"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                            "title": "sampling_algorithm"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                            "title": "sampling_algorithm"
                        },
                        {
                            "type": "string",
                            "enum": [
                                "bayesian",
                                "grid",
                                "random"
                            ],
                            "title": "sampling_algorithm"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/RandomSamplingAlgorithmSchema"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/GridSamplingAlgorithmSchema"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/BayesianSamplingAlgorithmSchema"
                        }
                    ]
                }
            },
            "additionalProperties": false
        },
        "ImageSweepLimitSchema": {
            "type": "object",
            "properties": {
                "max_concurrent_trials": {
                    "title": "max_concurrent_trials",
                    "type": "number",
                    "format": "integer"
                },
                "max_trials": {
                    "title": "max_trials",
                    "type": "number",
                    "format": "integer"
                }
            },
            "additionalProperties": false
        },
        "ImageClassificationMultilabelNodeSchema": {
            "required": [
                "target_column_name",
                "task",
                "type"
            ],
            "type": "object",
            "properties": {
                "compute": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "enum": [
                                "local"
                            ],
                            "title": "compute"
                        },
                        {
                            "type": "string",
                            "pattern": "^azureml:.*",
                            "arm_type": "computes",
                            "title": "compute"
                        },
                        {
                            "title": "compute",
                            "type": "string"
                        }
                    ]
                },
                "creation_context": {
                    "type": "object",
                    "$ref": "#/definitions/CreationContextSchema"
                },
                "description": {
                    "title": "description",
                    "type": "string"
                },
                "display_name": {
                    "title": "display_name",
                    "type": "string"
                },
                "environment_id": {
                    "title": "environment_id",
                    "type": "string"
                },
                "environment_variables": {
                    "title": "environment_variables",
                    "type": "object",
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "title": "environment_variables",
                                "type": "string"
                            }
                        ]
                    }
                },
                "experiment_name": {
                    "title": "experiment_name",
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "pattern": "^azureml:.*",
                    "arm_type": "jobs",
                    "title": "id",
                    "readonly": true
                },
                "identity": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/ManagedIdentitySchema"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/AMLTokenIdentitySchema"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/UserIdentitySchema"
                        }
                    ]
                },
                "image_model": {
                    "type": "object",
                    "$ref": "#/definitions/ImageModelSettingsClassificationSchema"
                },
                "limits": {
                    "type": "object",
                    "$ref": "#/definitions/ImageLimitsSchema"
                },
                "log_files": {
                    "title": "log_files",
                    "type": "object",
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "title": "log_files",
                                "type": "string"
                            }
                        ]
                    }
                },
                "log_verbosity": {
                    "type": "string",
                    "enum": [
                        "not_set",
                        "debug",
                        "info",
                        "warning",
                        "error",
                        "critical"
                    ],
                    "title": "log_verbosity"
                },
                "name": {
                    "title": "name",
                    "type": "string"
                },
                "outputs": {
                    "title": "outputs",
                    "type": "object",
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "object",
                                "$ref": "#/definitions/OutputSchema"
                            },
                            {
                                "type": "string",
                                "pattern": "^\\$\\{\\{parent\\.outputs\\.(.*?)\\}\\}$",
                                "title": "outputs"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "primary_metric": {
                    "type": "string",
                    "enum": [
                        "auc_weighted",
                        "accuracy",
                        "norm_macro_recall",
                        "average_precision_score_weighted",
                        "precision_score_weighted",
                        "iou"
                    ],
                    "title": "primary_metric"
                },
                "properties": {
                    "title": "properties",
                    "type": "object",
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "title": "properties",
                                "type": [
                                    "string",
                                    "null"
                                ]
                            }
                        ]
                    }
                },
                "resources": {
                    "type": "object",
                    "$ref": "#/definitions/ResourceConfigurationSchema"
                },
                "$schema": {
                    "title": "$schema",
                    "type": "string",
                    "readonly": true
                },
                "search_space": {
                    "title": "search_space",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "$ref": "#/definitions/ImageModelDistributionSettingsClassificationSchema"
                    }
                },
                "services": {
                    "title": "services",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "$ref": "#/definitions/JobServiceSchema"
                    }
                },
                "status": {
                    "title": "status",
                    "type": "string",
                    "readonly": true
                },
                "sweep": {
                    "type": "object",
                    "$ref": "#/definitions/ImageSweepSettingsSchema"
                },
                "tags": {
                    "title": "tags",
                    "type": "object",
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "title": "tags",
                                "type": [
                                    "string",
                                    "null"
                                ]
                            }
                        ]
                    }
                },
                "target_column_name": {
                    "title": "target_column_name",
                    "type": "string"
                },
                "task": {
                    "type": "string",
                    "enum": [
                        "image_classification_multilabel"
                    ],
                    "title": "task"
                },
                "test_data": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/InputSchema"
                        },
                        {
                            "title": "test_data",
                            "type": "object",
                            "additionalProperties": {
                                "anyOf": [
                                    {
                                        "type": "string",
                                        "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                    },
                                    {
                                        "type": "string",
                                        "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                    },
                                    {
                                        "type": "object",
                                        "$ref": "#/definitions/InputSchema"
                                    },
                                    {
                                        "type": "object",
                                        "$ref": "#/definitions/InputLiteralValueSchema"
                                    },
                                    {
                                        "title": "test_data",
                                        "type": "number",
                                        "format": "integer"
                                    },
                                    {
                                        "title": "test_data",
                                        "type": "string"
                                    },
                                    {
                                        "title": "test_data",
                                        "type": "boolean"
                                    },
                                    {
                                        "title": "test_data",
                                        "type": "number",
                                        "format": "float"
                                    }
                                ]
                            }
                        }
                    ]
                },
                "test_data_size": {
                    "title": "test_data_size",
                    "type": "number",
                    "format": "float"
                },
                "training_data": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "title": "training_data",
                            "type": "string"
                        },
                        {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                },
                                {
                                    "type": "string",
                                    "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                },
                                {
                                    "type": "object",
                                    "$ref": "#/definitions/InputSchema"
                                },
                                {
                                    "title": "training_data",
                                    "type": "object",
                                    "additionalProperties": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                            },
                                            {
                                                "type": "string",
                                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                            },
                                            {
                                                "type": "object",
                                                "$ref": "#/definitions/InputSchema"
                                            },
                                            {
                                                "type": "object",
                                                "$ref": "#/definitions/InputLiteralValueSchema"
                                            },
                                            {
                                                "title": "training_data",
                                                "type": "number",
                                                "format": "integer"
                                            },
                                            {
                                                "title": "training_data",
                                                "type": "string"
                                            },
                                            {
                                                "title": "training_data",
                                                "type": "boolean"
                                            },
                                            {
                                                "title": "training_data",
                                                "type": "number",
                                                "format": "float"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    ]
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "automl"
                    ],
                    "title": "type"
                },
                "validation_data": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "title": "validation_data",
                            "type": "string"
                        },
                        {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                },
                                {
                                    "type": "string",
                                    "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                },
                                {
                                    "type": "object",
                                    "$ref": "#/definitions/InputSchema"
                                },
                                {
                                    "title": "validation_data",
                                    "type": "object",
                                    "additionalProperties": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                            },
                                            {
                                                "type": "string",
                                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                            },
                                            {
                                                "type": "object",
                                                "$ref": "#/definitions/InputSchema"
                                            },
                                            {
                                                "type": "object",
                                                "$ref": "#/definitions/InputLiteralValueSchema"
                                            },
                                            {
                                                "title": "validation_data",
                                                "type": "number",
                                                "format": "integer"
                                            },
                                            {
                                                "title": "validation_data",
                                                "type": "string"
                                            },
                                            {
                                                "title": "validation_data",
                                                "type": "boolean"
                                            },
                                            {
                                                "title": "validation_data",
                                                "type": "number",
                                                "format": "float"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    ]
                },
                "validation_data_size": {
                    "title": "validation_data_size",
                    "type": "number",
                    "format": "float"
                }
            },
            "additionalProperties": false
        },
        "ImageObjectDetectionNodeSchema": {
            "required": [
                "target_column_name",
                "task",
                "type"
            ],
            "type": "object",
            "properties": {
                "compute": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "enum": [
                                "local"
                            ],
                            "title": "compute"
                        },
                        {
                            "type": "string",
                            "pattern": "^azureml:.*",
                            "arm_type": "computes",
                            "title": "compute"
                        },
                        {
                            "title": "compute",
                            "type": "string"
                        }
                    ]
                },
                "creation_context": {
                    "type": "object",
                    "$ref": "#/definitions/CreationContextSchema"
                },
                "description": {
                    "title": "description",
                    "type": "string"
                },
                "display_name": {
                    "title": "display_name",
                    "type": "string"
                },
                "environment_id": {
                    "title": "environment_id",
                    "type": "string"
                },
                "environment_variables": {
                    "title": "environment_variables",
                    "type": "object",
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "title": "environment_variables",
                                "type": "string"
                            }
                        ]
                    }
                },
                "experiment_name": {
                    "title": "experiment_name",
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "pattern": "^azureml:.*",
                    "arm_type": "jobs",
                    "title": "id",
                    "readonly": true
                },
                "identity": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/ManagedIdentitySchema"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/AMLTokenIdentitySchema"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/UserIdentitySchema"
                        }
                    ]
                },
                "image_model": {
                    "type": "object",
                    "$ref": "#/definitions/ImageModelSettingsObjectDetectionSchema"
                },
                "limits": {
                    "type": "object",
                    "$ref": "#/definitions/ImageLimitsSchema"
                },
                "log_files": {
                    "title": "log_files",
                    "type": "object",
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "title": "log_files",
                                "type": "string"
                            }
                        ]
                    }
                },
                "log_verbosity": {
                    "type": "string",
                    "enum": [
                        "not_set",
                        "debug",
                        "info",
                        "warning",
                        "error",
                        "critical"
                    ],
                    "title": "log_verbosity"
                },
                "name": {
                    "title": "name",
                    "type": "string"
                },
                "outputs": {
                    "title": "outputs",
                    "type": "object",
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "object",
                                "$ref": "#/definitions/OutputSchema"
                            },
                            {
                                "type": "string",
                                "pattern": "^\\$\\{\\{parent\\.outputs\\.(.*?)\\}\\}$",
                                "title": "outputs"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "primary_metric": {
                    "type": "string",
                    "enum": [
                        "mean_average_precision"
                    ],
                    "title": "primary_metric"
                },
                "properties": {
                    "title": "properties",
                    "type": "object",
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "title": "properties",
                                "type": [
                                    "string",
                                    "null"
                                ]
                            }
                        ]
                    }
                },
                "resources": {
                    "type": "object",
                    "$ref": "#/definitions/ResourceConfigurationSchema"
                },
                "$schema": {
                    "title": "$schema",
                    "type": "string",
                    "readonly": true
                },
                "search_space": {
                    "title": "search_space",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "$ref": "#/definitions/ImageModelDistributionSettingsObjectDetectionSchema"
                    }
                },
                "services": {
                    "title": "services",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "$ref": "#/definitions/JobServiceSchema"
                    }
                },
                "status": {
                    "title": "status",
                    "type": "string",
                    "readonly": true
                },
                "sweep": {
                    "type": "object",
                    "$ref": "#/definitions/ImageSweepSettingsSchema"
                },
                "tags": {
                    "title": "tags",
                    "type": "object",
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "title": "tags",
                                "type": [
                                    "string",
                                    "null"
                                ]
                            }
                        ]
                    }
                },
                "target_column_name": {
                    "title": "target_column_name",
                    "type": "string"
                },
                "task": {
                    "type": "string",
                    "enum": [
                        "image_object_detection"
                    ],
                    "title": "task"
                },
                "test_data": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/InputSchema"
                        },
                        {
                            "title": "test_data",
                            "type": "object",
                            "additionalProperties": {
                                "anyOf": [
                                    {
                                        "type": "string",
                                        "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                    },
                                    {
                                        "type": "string",
                                        "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                    },
                                    {
                                        "type": "object",
                                        "$ref": "#/definitions/InputSchema"
                                    },
                                    {
                                        "type": "object",
                                        "$ref": "#/definitions/InputLiteralValueSchema"
                                    },
                                    {
                                        "title": "test_data",
                                        "type": "number",
                                        "format": "integer"
                                    },
                                    {
                                        "title": "test_data",
                                        "type": "string"
                                    },
                                    {
                                        "title": "test_data",
                                        "type": "boolean"
                                    },
                                    {
                                        "title": "test_data",
                                        "type": "number",
                                        "format": "float"
                                    }
                                ]
                            }
                        }
                    ]
                },
                "test_data_size": {
                    "title": "test_data_size",
                    "type": "number",
                    "format": "float"
                },
                "training_data": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "title": "training_data",
                            "type": "string"
                        },
                        {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                },
                                {
                                    "type": "string",
                                    "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                },
                                {
                                    "type": "object",
                                    "$ref": "#/definitions/InputSchema"
                                },
                                {
                                    "title": "training_data",
                                    "type": "object",
                                    "additionalProperties": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                            },
                                            {
                                                "type": "string",
                                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                            },
                                            {
                                                "type": "object",
                                                "$ref": "#/definitions/InputSchema"
                                            },
                                            {
                                                "type": "object",
                                                "$ref": "#/definitions/InputLiteralValueSchema"
                                            },
                                            {
                                                "title": "training_data",
                                                "type": "number",
                                                "format": "integer"
                                            },
                                            {
                                                "title": "training_data",
                                                "type": "string"
                                            },
                                            {
                                                "title": "training_data",
                                                "type": "boolean"
                                            },
                                            {
                                                "title": "training_data",
                                                "type": "number",
                                                "format": "float"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    ]
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "automl"
                    ],
                    "title": "type"
                },
                "validation_data": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "title": "validation_data",
                            "type": "string"
                        },
                        {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                },
                                {
                                    "type": "string",
                                    "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                },
                                {
                                    "type": "object",
                                    "$ref": "#/definitions/InputSchema"
                                },
                                {
                                    "title": "validation_data",
                                    "type": "object",
                                    "additionalProperties": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                            },
                                            {
                                                "type": "string",
                                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                            },
                                            {
                                                "type": "object",
                                                "$ref": "#/definitions/InputSchema"
                                            },
                                            {
                                                "type": "object",
                                                "$ref": "#/definitions/InputLiteralValueSchema"
                                            },
                                            {
                                                "title": "validation_data",
                                                "type": "number",
                                                "format": "integer"
                                            },
                                            {
                                                "title": "validation_data",
                                                "type": "string"
                                            },
                                            {
                                                "title": "validation_data",
                                                "type": "boolean"
                                            },
                                            {
                                                "title": "validation_data",
                                                "type": "number",
                                                "format": "float"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    ]
                },
                "validation_data_size": {
                    "title": "validation_data_size",
                    "type": "number",
                    "format": "float"
                }
            },
            "additionalProperties": false
        },
        "ImageModelSettingsObjectDetectionSchema": {
            "type": "object",
            "properties": {
                "advanced_settings": {
                    "title": "advanced_settings",
                    "type": "string"
                },
                "ams_gradient": {
                    "title": "ams_gradient",
                    "type": "boolean"
                },
                "augmentations": {
                    "title": "augmentations",
                    "type": "string"
                },
                "beta1": {
                    "title": "beta1",
                    "type": "number",
                    "format": "float"
                },
                "beta2": {
                    "title": "beta2",
                    "type": "number",
                    "format": "float"
                },
                "box_detections_per_image": {
                    "title": "box_detections_per_image",
                    "type": "number",
                    "format": "integer"
                },
                "box_score_threshold": {
                    "title": "box_score_threshold",
                    "type": "number",
                    "format": "float"
                },
                "checkpoint_dataset_id": {
                    "title": "checkpoint_dataset_id",
                    "type": "string"
                },
                "checkpoint_filename": {
                    "title": "checkpoint_filename",
                    "type": "string"
                },
                "checkpoint_frequency": {
                    "title": "checkpoint_frequency",
                    "type": "number",
                    "format": "integer"
                },
                "checkpoint_run_id": {
                    "title": "checkpoint_run_id",
                    "type": "string"
                },
                "distributed": {
                    "title": "distributed",
                    "type": "boolean"
                },
                "early_stopping": {
                    "title": "early_stopping",
                    "type": "boolean"
                },
                "early_stopping_delay": {
                    "title": "early_stopping_delay",
                    "type": "number",
                    "format": "integer"
                },
                "early_stopping_patience": {
                    "title": "early_stopping_patience",
                    "type": "number",
                    "format": "integer"
                },
                "enable_onnx_normalization": {
                    "title": "enable_onnx_normalization",
                    "type": "boolean"
                },
                "evaluation_frequency": {
                    "title": "evaluation_frequency",
                    "type": "number",
                    "format": "integer"
                },
                "gradient_accumulation_step": {
                    "title": "gradient_accumulation_step",
                    "type": "number",
                    "format": "integer"
                },
                "image_size": {
                    "title": "image_size",
                    "type": "number",
                    "format": "integer"
                },
                "layers_to_freeze": {
                    "title": "layers_to_freeze",
                    "type": "number",
                    "format": "integer"
                },
                "learning_rate": {
                    "title": "learning_rate",
                    "type": "number",
                    "format": "float"
                },
                "learning_rate_scheduler": {
                    "type": "string",
                    "enum": [
                        "none",
                        "warmupcosine",
                        "step"
                    ],
                    "title": "learning_rate_scheduler"
                },
                "max_size": {
                    "title": "max_size",
                    "type": "number",
                    "format": "integer"
                },
                "min_size": {
                    "title": "min_size",
                    "type": "number",
                    "format": "integer"
                },
                "model_name": {
                    "title": "model_name",
                    "type": "string"
                },
                "model_size": {
                    "type": "string",
                    "enum": [
                        "none",
                        "small",
                        "medium",
                        "large",
                        "extralarge"
                    ],
                    "title": "model_size"
                },
                "momentum": {
                    "title": "momentum",
                    "type": "number",
                    "format": "float"
                },
                "multi_scale": {
                    "title": "multi_scale",
                    "type": "boolean"
                },
                "nesterov": {
                    "title": "nesterov",
                    "type": "boolean"
                },
                "nms_iou_threshold": {
                    "title": "nms_iou_threshold",
                    "type": "number",
                    "format": "float"
                },
                "number_of_epochs": {
                    "title": "number_of_epochs",
                    "type": "number",
                    "format": "integer"
                },
                "number_of_workers": {
                    "title": "number_of_workers",
                    "type": "number",
                    "format": "integer"
                },
                "optimizer": {
                    "type": "string",
                    "enum": [
                        "none",
                        "sgd",
                        "adam",
                        "adamw"
                    ],
                    "title": "optimizer"
                },
                "random_seed": {
                    "title": "random_seed",
                    "type": "number",
                    "format": "integer"
                },
                "split_ratio": {
                    "title": "split_ratio",
                    "type": "number",
                    "format": "float"
                },
                "step_lr_gamma": {
                    "title": "step_lr_gamma",
                    "type": "number",
                    "format": "float"
                },
                "step_lr_step_size": {
                    "title": "step_lr_step_size",
                    "type": "number",
                    "format": "integer"
                },
                "tile_grid_size": {
                    "title": "tile_grid_size",
                    "type": "string"
                },
                "tile_overlap_ratio": {
                    "title": "tile_overlap_ratio",
                    "type": "number",
                    "format": "float"
                },
                "tile_predictions_nms_threshold": {
                    "title": "tile_predictions_nms_threshold",
                    "type": "number",
                    "format": "float"
                },
                "training_batch_size": {
                    "title": "training_batch_size",
                    "type": "number",
                    "format": "integer"
                },
                "validation_batch_size": {
                    "title": "validation_batch_size",
                    "type": "number",
                    "format": "integer"
                },
                "validation_iou_threshold": {
                    "title": "validation_iou_threshold",
                    "type": "number",
                    "format": "float"
                },
                "validation_metric_type": {
                    "type": "string",
                    "enum": [
                        "none",
                        "coco",
                        "voc",
                        "cocovoc"
                    ],
                    "title": "validation_metric_type"
                },
                "warmup_cosine_lr_cycles": {
                    "title": "warmup_cosine_lr_cycles",
                    "type": "number",
                    "format": "float"
                },
                "warmup_cosine_lr_warmup_epochs": {
                    "title": "warmup_cosine_lr_warmup_epochs",
                    "type": "number",
                    "format": "integer"
                },
                "weight_decay": {
                    "title": "weight_decay",
                    "type": "number",
                    "format": "float"
                }
            },
            "additionalProperties": false
        },
        "ImageModelDistributionSettingsObjectDetectionSchema": {
            "type": "object",
            "properties": {
                "ams_gradient": {
                    "title": "ams_gradient",
                    "type": "string"
                },
                "augmentations": {
                    "title": "augmentations",
                    "type": "string"
                },
                "beta1": {
                    "title": "beta1",
                    "type": "string"
                },
                "beta2": {
                    "title": "beta2",
                    "type": "string"
                },
                "box_detections_per_image": {
                    "title": "box_detections_per_image",
                    "type": "string"
                },
                "box_score_threshold": {
                    "title": "box_score_threshold",
                    "type": "string"
                },
                "distributed": {
                    "title": "distributed",
                    "type": "string"
                },
                "early_stopping": {
                    "title": "early_stopping",
                    "type": "string"
                },
                "early_stopping_delay": {
                    "title": "early_stopping_delay",
                    "type": "string"
                },
                "early_stopping_patience": {
                    "title": "early_stopping_patience",
                    "type": "string"
                },
                "enable_onnx_normalization": {
                    "title": "enable_onnx_normalization",
                    "type": "string"
                },
                "evaluation_frequency": {
                    "title": "evaluation_frequency",
                    "type": "string"
                },
                "grad_accumulation_step": {
                    "title": "grad_accumulation_step",
                    "type": "string"
                },
                "image_size": {
                    "title": "image_size",
                    "type": "string"
                },
                "layers_to_freeze": {
                    "title": "layers_to_freeze",
                    "type": "string"
                },
                "learning_rate": {
                    "title": "learning_rate",
                    "type": "string"
                },
                "learning_rate_scheduler": {
                    "title": "learning_rate_scheduler",
                    "type": "string"
                },
                "max_size": {
                    "title": "max_size",
                    "type": "string"
                },
                "min_size": {
                    "title": "min_size",
                    "type": "string"
                },
                "model_name": {
                    "title": "model_name",
                    "type": "string"
                },
                "model_size": {
                    "title": "model_size",
                    "type": "string"
                },
                "momentum": {
                    "title": "momentum",
                    "type": "string"
                },
                "multi_scale": {
                    "title": "multi_scale",
                    "type": "string"
                },
                "nesterov": {
                    "title": "nesterov",
                    "type": "string"
                },
                "nms_iou_threshold": {
                    "title": "nms_iou_threshold",
                    "type": "string"
                },
                "number_of_epochs": {
                    "title": "number_of_epochs",
                    "type": "string"
                },
                "number_of_workers": {
                    "title": "number_of_workers",
                    "type": "string"
                },
                "optimizer": {
                    "title": "optimizer",
                    "type": "string"
                },
                "random_seed": {
                    "title": "random_seed",
                    "type": "string"
                },
                "split_ratio": {
                    "title": "split_ratio",
                    "type": "string"
                },
                "step_lr_gamma": {
                    "title": "step_lr_gamma",
                    "type": "string"
                },
                "step_lr_step_size": {
                    "title": "step_lr_step_size",
                    "type": "string"
                },
                "tile_grid_size": {
                    "title": "tile_grid_size",
                    "type": "string"
                },
                "tile_overlap_ratio": {
                    "title": "tile_overlap_ratio",
                    "type": "string"
                },
                "tile_predictions_nms_threshold": {
                    "title": "tile_predictions_nms_threshold",
                    "type": "string"
                },
                "training_batch_size": {
                    "title": "training_batch_size",
                    "type": "string"
                },
                "validation_batch_size": {
                    "title": "validation_batch_size",
                    "type": "string"
                },
                "validation_iou_threshold": {
                    "title": "validation_iou_threshold",
                    "type": "string"
                },
                "validation_metric_type": {
                    "title": "validation_metric_type",
                    "type": "string"
                },
                "warmup_cosine_lr_cycles": {
                    "title": "warmup_cosine_lr_cycles",
                    "type": "string"
                },
                "warmup_cosine_lr_warmup_epochs": {
                    "title": "warmup_cosine_lr_warmup_epochs",
                    "type": "string"
                },
                "weight_decay": {
                    "title": "weight_decay",
                    "type": "string"
                }
            },
            "additionalProperties": false
        },
        "ImageInstanceSegmentationNodeSchema": {
            "required": [
                "target_column_name",
                "task",
                "type"
            ],
            "type": "object",
            "properties": {
                "compute": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "enum": [
                                "local"
                            ],
                            "title": "compute"
                        },
                        {
                            "type": "string",
                            "pattern": "^azureml:.*",
                            "arm_type": "computes",
                            "title": "compute"
                        },
                        {
                            "title": "compute",
                            "type": "string"
                        }
                    ]
                },
                "creation_context": {
                    "type": "object",
                    "$ref": "#/definitions/CreationContextSchema"
                },
                "description": {
                    "title": "description",
                    "type": "string"
                },
                "display_name": {
                    "title": "display_name",
                    "type": "string"
                },
                "environment_id": {
                    "title": "environment_id",
                    "type": "string"
                },
                "environment_variables": {
                    "title": "environment_variables",
                    "type": "object",
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "title": "environment_variables",
                                "type": "string"
                            }
                        ]
                    }
                },
                "experiment_name": {
                    "title": "experiment_name",
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "pattern": "^azureml:.*",
                    "arm_type": "jobs",
                    "title": "id",
                    "readonly": true
                },
                "identity": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/ManagedIdentitySchema"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/AMLTokenIdentitySchema"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/UserIdentitySchema"
                        }
                    ]
                },
                "image_model": {
                    "type": "object",
                    "$ref": "#/definitions/ImageModelSettingsObjectDetectionSchema"
                },
                "limits": {
                    "type": "object",
                    "$ref": "#/definitions/ImageLimitsSchema"
                },
                "log_files": {
                    "title": "log_files",
                    "type": "object",
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "title": "log_files",
                                "type": "string"
                            }
                        ]
                    }
                },
                "log_verbosity": {
                    "type": "string",
                    "enum": [
                        "not_set",
                        "debug",
                        "info",
                        "warning",
                        "error",
                        "critical"
                    ],
                    "title": "log_verbosity"
                },
                "name": {
                    "title": "name",
                    "type": "string"
                },
                "outputs": {
                    "title": "outputs",
                    "type": "object",
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "object",
                                "$ref": "#/definitions/OutputSchema"
                            },
                            {
                                "type": "string",
                                "pattern": "^\\$\\{\\{parent\\.outputs\\.(.*?)\\}\\}$",
                                "title": "outputs"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "primary_metric": {
                    "type": "string",
                    "enum": [
                        "mean_average_precision"
                    ],
                    "title": "primary_metric"
                },
                "properties": {
                    "title": "properties",
                    "type": "object",
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "title": "properties",
                                "type": [
                                    "string",
                                    "null"
                                ]
                            }
                        ]
                    }
                },
                "resources": {
                    "type": "object",
                    "$ref": "#/definitions/ResourceConfigurationSchema"
                },
                "$schema": {
                    "title": "$schema",
                    "type": "string",
                    "readonly": true
                },
                "search_space": {
                    "title": "search_space",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "$ref": "#/definitions/ImageModelDistributionSettingsObjectDetectionSchema"
                    }
                },
                "services": {
                    "title": "services",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "$ref": "#/definitions/JobServiceSchema"
                    }
                },
                "status": {
                    "title": "status",
                    "type": "string",
                    "readonly": true
                },
                "sweep": {
                    "type": "object",
                    "$ref": "#/definitions/ImageSweepSettingsSchema"
                },
                "tags": {
                    "title": "tags",
                    "type": "object",
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "title": "tags",
                                "type": [
                                    "string",
                                    "null"
                                ]
                            }
                        ]
                    }
                },
                "target_column_name": {
                    "title": "target_column_name",
                    "type": "string"
                },
                "task": {
                    "type": "string",
                    "enum": [
                        "image_instance_segmentation"
                    ],
                    "title": "task"
                },
                "test_data": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/InputSchema"
                        },
                        {
                            "title": "test_data",
                            "type": "object",
                            "additionalProperties": {
                                "anyOf": [
                                    {
                                        "type": "string",
                                        "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                    },
                                    {
                                        "type": "string",
                                        "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                    },
                                    {
                                        "type": "object",
                                        "$ref": "#/definitions/InputSchema"
                                    },
                                    {
                                        "type": "object",
                                        "$ref": "#/definitions/InputLiteralValueSchema"
                                    },
                                    {
                                        "title": "test_data",
                                        "type": "number",
                                        "format": "integer"
                                    },
                                    {
                                        "title": "test_data",
                                        "type": "string"
                                    },
                                    {
                                        "title": "test_data",
                                        "type": "boolean"
                                    },
                                    {
                                        "title": "test_data",
                                        "type": "number",
                                        "format": "float"
                                    }
                                ]
                            }
                        }
                    ]
                },
                "test_data_size": {
                    "title": "test_data_size",
                    "type": "number",
                    "format": "float"
                },
                "training_data": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "title": "training_data",
                            "type": "string"
                        },
                        {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                },
                                {
                                    "type": "string",
                                    "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                },
                                {
                                    "type": "object",
                                    "$ref": "#/definitions/InputSchema"
                                },
                                {
                                    "title": "training_data",
                                    "type": "object",
                                    "additionalProperties": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                            },
                                            {
                                                "type": "string",
                                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                            },
                                            {
                                                "type": "object",
                                                "$ref": "#/definitions/InputSchema"
                                            },
                                            {
                                                "type": "object",
                                                "$ref": "#/definitions/InputLiteralValueSchema"
                                            },
                                            {
                                                "title": "training_data",
                                                "type": "number",
                                                "format": "integer"
                                            },
                                            {
                                                "title": "training_data",
                                                "type": "string"
                                            },
                                            {
                                                "title": "training_data",
                                                "type": "boolean"
                                            },
                                            {
                                                "title": "training_data",
                                                "type": "number",
                                                "format": "float"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    ]
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "automl"
                    ],
                    "title": "type"
                },
                "validation_data": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "title": "validation_data",
                            "type": "string"
                        },
                        {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                },
                                {
                                    "type": "string",
                                    "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                },
                                {
                                    "type": "object",
                                    "$ref": "#/definitions/InputSchema"
                                },
                                {
                                    "title": "validation_data",
                                    "type": "object",
                                    "additionalProperties": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                            },
                                            {
                                                "type": "string",
                                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                            },
                                            {
                                                "type": "object",
                                                "$ref": "#/definitions/InputSchema"
                                            },
                                            {
                                                "type": "object",
                                                "$ref": "#/definitions/InputLiteralValueSchema"
                                            },
                                            {
                                                "title": "validation_data",
                                                "type": "number",
                                                "format": "integer"
                                            },
                                            {
                                                "title": "validation_data",
                                                "type": "string"
                                            },
                                            {
                                                "title": "validation_data",
                                                "type": "boolean"
                                            },
                                            {
                                                "title": "validation_data",
                                                "type": "number",
                                                "format": "float"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    ]
                },
                "validation_data_size": {
                    "title": "validation_data_size",
                    "type": "number",
                    "format": "float"
                }
            },
            "additionalProperties": false
        },
        "AutoMLTextClassificationNode": {
            "required": [
                "target_column_name",
                "task",
                "type"
            ],
            "type": "object",
            "properties": {
                "compute": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "enum": [
                                "local"
                            ],
                            "title": "compute"
                        },
                        {
                            "type": "string",
                            "pattern": "^azureml:.*",
                            "arm_type": "computes",
                            "title": "compute"
                        },
                        {
                            "title": "compute",
                            "type": "string"
                        }
                    ]
                },
                "creation_context": {
                    "type": "object",
                    "$ref": "#/definitions/CreationContextSchema"
                },
                "description": {
                    "title": "description",
                    "type": "string"
                },
                "display_name": {
                    "title": "display_name",
                    "type": "string"
                },
                "environment_id": {
                    "title": "environment_id",
                    "type": "string"
                },
                "environment_variables": {
                    "title": "environment_variables",
                    "type": "object",
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "title": "environment_variables",
                                "type": "string"
                            }
                        ]
                    }
                },
                "experiment_name": {
                    "title": "experiment_name",
                    "type": "string"
                },
                "featurization": {
                    "type": "object",
                    "$ref": "#/definitions/NlpFeaturizationSettingsSchema",
                    "title": "featurization"
                },
                "id": {
                    "type": "string",
                    "pattern": "^azureml:.*",
                    "arm_type": "jobs",
                    "title": "id",
                    "readonly": true
                },
                "identity": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/ManagedIdentitySchema"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/AMLTokenIdentitySchema"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/UserIdentitySchema"
                        }
                    ]
                },
                "limits": {
                    "type": "object",
                    "$ref": "#/definitions/NlpLimitsSchema"
                },
                "log_files": {
                    "title": "log_files",
                    "type": "object",
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "title": "log_files",
                                "type": "string"
                            }
                        ]
                    }
                },
                "log_verbosity": {
                    "type": "string",
                    "enum": [
                        "not_set",
                        "debug",
                        "info",
                        "warning",
                        "error",
                        "critical"
                    ],
                    "title": "log_verbosity"
                },
                "name": {
                    "title": "name",
                    "type": "string"
                },
                "outputs": {
                    "title": "outputs",
                    "type": "object",
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "object",
                                "$ref": "#/definitions/OutputSchema"
                            },
                            {
                                "type": "string",
                                "pattern": "^\\$\\{\\{parent\\.outputs\\.(.*?)\\}\\}$",
                                "title": "outputs"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "primary_metric": {
                    "type": "string",
                    "enum": [
                        "auc_weighted",
                        "accuracy",
                        "norm_macro_recall",
                        "average_precision_score_weighted",
                        "precision_score_weighted"
                    ],
                    "title": "primary_metric"
                },
                "properties": {
                    "title": "properties",
                    "type": "object",
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "title": "properties",
                                "type": [
                                    "string",
                                    "null"
                                ]
                            }
                        ]
                    }
                },
                "resources": {
                    "type": "object",
                    "$ref": "#/definitions/ResourceConfigurationSchema"
                },
                "$schema": {
                    "title": "$schema",
                    "type": "string",
                    "readonly": true
                },
                "services": {
                    "title": "services",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "$ref": "#/definitions/JobServiceSchema"
                    }
                },
                "status": {
                    "title": "status",
                    "type": "string",
                    "readonly": true
                },
                "tags": {
                    "title": "tags",
                    "type": "object",
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "title": "tags",
                                "type": [
                                    "string",
                                    "null"
                                ]
                            }
                        ]
                    }
                },
                "target_column_name": {
                    "title": "target_column_name",
                    "type": "string"
                },
                "task": {
                    "type": "string",
                    "enum": [
                        "text_classification"
                    ],
                    "title": "task"
                },
                "training_data": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "title": "training_data",
                            "type": "string"
                        },
                        {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                },
                                {
                                    "type": "string",
                                    "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                },
                                {
                                    "type": "object",
                                    "$ref": "#/definitions/InputSchema"
                                },
                                {
                                    "title": "training_data",
                                    "type": "object",
                                    "additionalProperties": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                            },
                                            {
                                                "type": "string",
                                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                            },
                                            {
                                                "type": "object",
                                                "$ref": "#/definitions/InputSchema"
                                            },
                                            {
                                                "type": "object",
                                                "$ref": "#/definitions/InputLiteralValueSchema"
                                            },
                                            {
                                                "title": "training_data",
                                                "type": "number",
                                                "format": "integer"
                                            },
                                            {
                                                "title": "training_data",
                                                "type": "string"
                                            },
                                            {
                                                "title": "training_data",
                                                "type": "boolean"
                                            },
                                            {
                                                "title": "training_data",
                                                "type": "number",
                                                "format": "float"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    ]
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "automl"
                    ],
                    "title": "type"
                },
                "validation_data": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "title": "validation_data",
                            "type": "string"
                        },
                        {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                },
                                {
                                    "type": "string",
                                    "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                },
                                {
                                    "type": "object",
                                    "$ref": "#/definitions/InputSchema"
                                },
                                {
                                    "title": "validation_data",
                                    "type": "object",
                                    "additionalProperties": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                            },
                                            {
                                                "type": "string",
                                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                            },
                                            {
                                                "type": "object",
                                                "$ref": "#/definitions/InputSchema"
                                            },
                                            {
                                                "type": "object",
                                                "$ref": "#/definitions/InputLiteralValueSchema"
                                            },
                                            {
                                                "title": "validation_data",
                                                "type": "number",
                                                "format": "integer"
                                            },
                                            {
                                                "title": "validation_data",
                                                "type": "string"
                                            },
                                            {
                                                "title": "validation_data",
                                                "type": "boolean"
                                            },
                                            {
                                                "title": "validation_data",
                                                "type": "number",
                                                "format": "float"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    ]
                }
            },
            "additionalProperties": false
        },
        "NlpFeaturizationSettingsSchema": {
            "type": "object",
            "properties": {
                "dataset_language": {
                    "title": "dataset_language",
                    "type": "string"
                }
            },
            "additionalProperties": false
        },
        "NlpLimitsSchema": {
            "type": "object",
            "properties": {
                "max_concurrent_trials": {
                    "title": "max_concurrent_trials",
                    "type": "number",
                    "format": "integer"
                },
                "max_trials": {
                    "title": "max_trials",
                    "type": "number",
                    "format": "integer"
                },
                "timeout_minutes": {
                    "title": "timeout_minutes",
                    "type": "number",
                    "format": "integer"
                }
            },
            "additionalProperties": false
        },
        "AutoMLTextClassificationMultilabelNode": {
            "required": [
                "target_column_name",
                "task",
                "type"
            ],
            "type": "object",
            "properties": {
                "compute": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "enum": [
                                "local"
                            ],
                            "title": "compute"
                        },
                        {
                            "type": "string",
                            "pattern": "^azureml:.*",
                            "arm_type": "computes",
                            "title": "compute"
                        },
                        {
                            "title": "compute",
                            "type": "string"
                        }
                    ]
                },
                "creation_context": {
                    "type": "object",
                    "$ref": "#/definitions/CreationContextSchema"
                },
                "description": {
                    "title": "description",
                    "type": "string"
                },
                "display_name": {
                    "title": "display_name",
                    "type": "string"
                },
                "environment_id": {
                    "title": "environment_id",
                    "type": "string"
                },
                "environment_variables": {
                    "title": "environment_variables",
                    "type": "object",
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "title": "environment_variables",
                                "type": "string"
                            }
                        ]
                    }
                },
                "experiment_name": {
                    "title": "experiment_name",
                    "type": "string"
                },
                "featurization": {
                    "type": "object",
                    "$ref": "#/definitions/NlpFeaturizationSettingsSchema",
                    "title": "featurization"
                },
                "id": {
                    "type": "string",
                    "pattern": "^azureml:.*",
                    "arm_type": "jobs",
                    "title": "id",
                    "readonly": true
                },
                "identity": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/ManagedIdentitySchema"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/AMLTokenIdentitySchema"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/UserIdentitySchema"
                        }
                    ]
                },
                "limits": {
                    "type": "object",
                    "$ref": "#/definitions/NlpLimitsSchema"
                },
                "log_files": {
                    "title": "log_files",
                    "type": "object",
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "title": "log_files",
                                "type": "string"
                            }
                        ]
                    }
                },
                "log_verbosity": {
                    "type": "string",
                    "enum": [
                        "not_set",
                        "debug",
                        "info",
                        "warning",
                        "error",
                        "critical"
                    ],
                    "title": "log_verbosity"
                },
                "name": {
                    "title": "name",
                    "type": "string"
                },
                "outputs": {
                    "title": "outputs",
                    "type": "object",
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "object",
                                "$ref": "#/definitions/OutputSchema"
                            },
                            {
                                "type": "string",
                                "pattern": "^\\$\\{\\{parent\\.outputs\\.(.*?)\\}\\}$",
                                "title": "outputs"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "primary_metric": {
                    "type": "string",
                    "enum": [
                        "accuracy"
                    ],
                    "title": "primary_metric"
                },
                "properties": {
                    "title": "properties",
                    "type": "object",
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "title": "properties",
                                "type": [
                                    "string",
                                    "null"
                                ]
                            }
                        ]
                    }
                },
                "resources": {
                    "type": "object",
                    "$ref": "#/definitions/ResourceConfigurationSchema"
                },
                "$schema": {
                    "title": "$schema",
                    "type": "string",
                    "readonly": true
                },
                "services": {
                    "title": "services",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "$ref": "#/definitions/JobServiceSchema"
                    }
                },
                "status": {
                    "title": "status",
                    "type": "string",
                    "readonly": true
                },
                "tags": {
                    "title": "tags",
                    "type": "object",
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "title": "tags",
                                "type": [
                                    "string",
                                    "null"
                                ]
                            }
                        ]
                    }
                },
                "target_column_name": {
                    "title": "target_column_name",
                    "type": "string"
                },
                "task": {
                    "type": "string",
                    "enum": [
                        "text_classification_multilabel"
                    ],
                    "title": "task"
                },
                "training_data": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "title": "training_data",
                            "type": "string"
                        },
                        {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                },
                                {
                                    "type": "string",
                                    "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                },
                                {
                                    "type": "object",
                                    "$ref": "#/definitions/InputSchema"
                                },
                                {
                                    "title": "training_data",
                                    "type": "object",
                                    "additionalProperties": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                            },
                                            {
                                                "type": "string",
                                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                            },
                                            {
                                                "type": "object",
                                                "$ref": "#/definitions/InputSchema"
                                            },
                                            {
                                                "type": "object",
                                                "$ref": "#/definitions/InputLiteralValueSchema"
                                            },
                                            {
                                                "title": "training_data",
                                                "type": "number",
                                                "format": "integer"
                                            },
                                            {
                                                "title": "training_data",
                                                "type": "string"
                                            },
                                            {
                                                "title": "training_data",
                                                "type": "boolean"
                                            },
                                            {
                                                "title": "training_data",
                                                "type": "number",
                                                "format": "float"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    ]
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "automl"
                    ],
                    "title": "type"
                },
                "validation_data": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "title": "validation_data",
                            "type": "string"
                        },
                        {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                },
                                {
                                    "type": "string",
                                    "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                },
                                {
                                    "type": "object",
                                    "$ref": "#/definitions/InputSchema"
                                },
                                {
                                    "title": "validation_data",
                                    "type": "object",
                                    "additionalProperties": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                            },
                                            {
                                                "type": "string",
                                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                            },
                                            {
                                                "type": "object",
                                                "$ref": "#/definitions/InputSchema"
                                            },
                                            {
                                                "type": "object",
                                                "$ref": "#/definitions/InputLiteralValueSchema"
                                            },
                                            {
                                                "title": "validation_data",
                                                "type": "number",
                                                "format": "integer"
                                            },
                                            {
                                                "title": "validation_data",
                                                "type": "string"
                                            },
                                            {
                                                "title": "validation_data",
                                                "type": "boolean"
                                            },
                                            {
                                                "title": "validation_data",
                                                "type": "number",
                                                "format": "float"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    ]
                }
            },
            "additionalProperties": false
        },
        "AutoMLTextNerNode": {
            "required": [
                "task",
                "type"
            ],
            "type": "object",
            "properties": {
                "compute": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "enum": [
                                "local"
                            ],
                            "title": "compute"
                        },
                        {
                            "type": "string",
                            "pattern": "^azureml:.*",
                            "arm_type": "computes",
                            "title": "compute"
                        },
                        {
                            "title": "compute",
                            "type": "string"
                        }
                    ]
                },
                "creation_context": {
                    "type": "object",
                    "$ref": "#/definitions/CreationContextSchema"
                },
                "description": {
                    "title": "description",
                    "type": "string"
                },
                "display_name": {
                    "title": "display_name",
                    "type": "string"
                },
                "environment_id": {
                    "title": "environment_id",
                    "type": "string"
                },
                "environment_variables": {
                    "title": "environment_variables",
                    "type": "object",
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "title": "environment_variables",
                                "type": "string"
                            }
                        ]
                    }
                },
                "experiment_name": {
                    "title": "experiment_name",
                    "type": "string"
                },
                "featurization": {
                    "type": "object",
                    "$ref": "#/definitions/NlpFeaturizationSettingsSchema",
                    "title": "featurization"
                },
                "id": {
                    "type": "string",
                    "pattern": "^azureml:.*",
                    "arm_type": "jobs",
                    "title": "id",
                    "readonly": true
                },
                "identity": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/ManagedIdentitySchema"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/AMLTokenIdentitySchema"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/UserIdentitySchema"
                        }
                    ]
                },
                "limits": {
                    "type": "object",
                    "$ref": "#/definitions/NlpLimitsSchema"
                },
                "log_files": {
                    "title": "log_files",
                    "type": "object",
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "title": "log_files",
                                "type": "string"
                            }
                        ]
                    }
                },
                "log_verbosity": {
                    "type": "string",
                    "enum": [
                        "not_set",
                        "debug",
                        "info",
                        "warning",
                        "error",
                        "critical"
                    ],
                    "title": "log_verbosity"
                },
                "name": {
                    "title": "name",
                    "type": "string"
                },
                "outputs": {
                    "title": "outputs",
                    "type": "object",
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "object",
                                "$ref": "#/definitions/OutputSchema"
                            },
                            {
                                "type": "string",
                                "pattern": "^\\$\\{\\{parent\\.outputs\\.(.*?)\\}\\}$",
                                "title": "outputs"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "primary_metric": {
                    "type": "string",
                    "enum": [
                        "accuracy"
                    ],
                    "title": "primary_metric"
                },
                "properties": {
                    "title": "properties",
                    "type": "object",
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "title": "properties",
                                "type": [
                                    "string",
                                    "null"
                                ]
                            }
                        ]
                    }
                },
                "resources": {
                    "type": "object",
                    "$ref": "#/definitions/ResourceConfigurationSchema"
                },
                "$schema": {
                    "title": "$schema",
                    "type": "string",
                    "readonly": true
                },
                "services": {
                    "title": "services",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "$ref": "#/definitions/JobServiceSchema"
                    }
                },
                "status": {
                    "title": "status",
                    "type": "string",
                    "readonly": true
                },
                "tags": {
                    "title": "tags",
                    "type": "object",
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "title": "tags",
                                "type": [
                                    "string",
                                    "null"
                                ]
                            }
                        ]
                    }
                },
                "target_column_name": {
                    "title": "target_column_name",
                    "type": "string"
                },
                "task": {
                    "type": "string",
                    "enum": [
                        "text_ner"
                    ],
                    "title": "task"
                },
                "training_data": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "title": "training_data",
                            "type": "string"
                        },
                        {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                },
                                {
                                    "type": "string",
                                    "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                },
                                {
                                    "type": "object",
                                    "$ref": "#/definitions/InputSchema"
                                },
                                {
                                    "title": "training_data",
                                    "type": "object",
                                    "additionalProperties": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                            },
                                            {
                                                "type": "string",
                                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                            },
                                            {
                                                "type": "object",
                                                "$ref": "#/definitions/InputSchema"
                                            },
                                            {
                                                "type": "object",
                                                "$ref": "#/definitions/InputLiteralValueSchema"
                                            },
                                            {
                                                "title": "training_data",
                                                "type": "number",
                                                "format": "integer"
                                            },
                                            {
                                                "title": "training_data",
                                                "type": "string"
                                            },
                                            {
                                                "title": "training_data",
                                                "type": "boolean"
                                            },
                                            {
                                                "title": "training_data",
                                                "type": "number",
                                                "format": "float"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    ]
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "automl"
                    ],
                    "title": "type"
                },
                "validation_data": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "title": "validation_data",
                            "type": "string"
                        },
                        {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                },
                                {
                                    "type": "string",
                                    "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                },
                                {
                                    "type": "object",
                                    "$ref": "#/definitions/InputSchema"
                                },
                                {
                                    "title": "validation_data",
                                    "type": "object",
                                    "additionalProperties": {
                                        "anyOf": [
                                            {
                                                "type": "string",
                                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                            },
                                            {
                                                "type": "string",
                                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                                            },
                                            {
                                                "type": "object",
                                                "$ref": "#/definitions/InputSchema"
                                            },
                                            {
                                                "type": "object",
                                                "$ref": "#/definitions/InputLiteralValueSchema"
                                            },
                                            {
                                                "title": "validation_data",
                                                "type": "number",
                                                "format": "integer"
                                            },
                                            {
                                                "title": "validation_data",
                                                "type": "string"
                                            },
                                            {
                                                "title": "validation_data",
                                                "type": "boolean"
                                            },
                                            {
                                                "title": "validation_data",
                                                "type": "number",
                                                "format": "float"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    ]
                }
            },
            "additionalProperties": false
        },
        "PipelineParallelJobSchema": {
            "type": "object",
            "properties": {
                "compute": {
                    "anyOf": [
                        {
                            "type": "string",
                            "enum": [
                                "local"
                            ],
                            "title": "compute"
                        },
                        {
                            "type": "string",
                            "pattern": "^azureml:.*",
                            "arm_type": "computes",
                            "title": "compute"
                        },
                        {
                            "title": "compute",
                            "type": "string"
                        }
                    ]
                },
                "creation_context": {
                    "type": "object",
                    "$ref": "#/definitions/CreationContextSchema"
                },
                "description": {
                    "title": "description",
                    "type": "string"
                },
                "display_name": {
                    "title": "display_name",
                    "type": "string"
                },
                "environment": {
                    "anyOf": [
                        {
                            "type": "object",
                            "$ref": "#/definitions/AnonymousEnvironmentSchema"
                        },
                        {
                            "type": "string",
                            "pattern": "^azureml:.*",
                            "arm_type": "environments",
                            "title": "environment"
                        },
                        {
                            "type": "string",
                            "pattern": "^file:.*"
                        }
                    ]
                },
                "environment_variables": {
                    "title": "environment_variables",
                    "type": "object",
                    "additionalProperties": {
                        "title": "environment_variables",
                        "type": "string"
                    }
                },
                "error_threshold": {
                    "title": "error_threshold",
                    "type": "number",
                    "format": "integer",
                    "default": -1,
                    "description": "The number of item processing failures should be ignored. If the error_threshold is reached, the job terminates. For a list of files as inputs, one item means one file reference. This setting doesn't apply to command parallelization."
                },
                "experiment_name": {
                    "title": "experiment_name",
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "pattern": "^azureml:.*",
                    "arm_type": "jobs",
                    "title": "id",
                    "readonly": true
                },
                "identity": {
                    "anyOf": [
                        {
                            "type": "object",
                            "$ref": "#/definitions/ManagedIdentitySchema"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/AMLTokenIdentitySchema"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/UserIdentitySchema"
                        }
                    ]
                },
                "input_data": {
                    "title": "input_data",
                    "type": "string"
                },
                "inputs": {
                    "anyOf": [
                        {
                            "type": "object",
                            "$ref": "#/definitions/InputSchema"
                        },
                        {
                            "title": "inputs",
                            "type": "object",
                            "additionalProperties": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "$ref": "#/definitions/InputSchema"
                                    },
                                    {
                                        "type": "object",
                                        "$ref": "#/definitions/InputLiteralValueSchema"
                                    },
                                    {
                                        "title": "inputs",
                                        "type": "number",
                                        "format": "integer"
                                    },
                                    {
                                        "title": "inputs",
                                        "type": "string"
                                    },
                                    {
                                        "title": "inputs",
                                        "type": "boolean"
                                    },
                                    {
                                        "title": "inputs",
                                        "type": "number",
                                        "format": "float"
                                    }
                                ]
                            }
                        }
                    ]
                },
                "log_files": {
                    "title": "log_files",
                    "type": "object",
                    "additionalProperties": {
                        "title": "log_files",
                        "type": "string"
                    }
                },
                "logging_level": {
                    "type": "string",
                    "enum": [
                        "DEBUG",
                        "INFO",
                        "WARNING"
                    ],
                    "title": "logging_level"
                },
                "max_concurrency_per_instance": {
                    "title": "max_concurrency_per_instance",
                    "type": "number",
                    "format": "integer",
                    "default": 1,
                    "description": "The max parallellism that each compute instance has."
                },
                "mini_batch_error_threshold": {
                    "title": "mini_batch_error_threshold",
                    "type": "number",
                    "format": "integer",
                    "default": -1,
                    "description": "The number of mini batch processing failures should be ignored. If the mini_batch_error_threshold is reached, the job terminates. For a list of files as inputs, one item means one file reference. This setting can be used by either command or python function parallelization. Only one error_threshold setting can be used in one job."
                },
                "mini_batch_size": {
                    "title": "mini_batch_size",
                    "type": "string",
                    "description": "The batch size of current job."
                },
                "name": {
                    "title": "name",
                    "type": "string"
                },
                "outputs": {
                    "title": "outputs",
                    "type": "object",
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "type": "object",
                                "$ref": "#/definitions/OutputSchema"
                            },
                            {
                                "title": "outputs",
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "properties": {
                    "title": "properties",
                    "type": "object",
                    "additionalProperties": {
                        "title": "properties",
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "resources": {
                    "type": "object",
                    "$ref": "#/definitions/ResourceConfigurationSchema"
                },
                "retry_settings": {
                    "type": "object",
                    "$ref": "#/definitions/RetrySettingsSchema"
                },
                "$schema": {
                    "title": "$schema",
                    "type": "string",
                    "readonly": true
                },
                "services": {
                    "title": "services",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "$ref": "#/definitions/JobServiceSchema"
                    }
                },
                "status": {
                    "title": "status",
                    "type": "string",
                    "readonly": true
                },
                "tags": {
                    "title": "tags",
                    "type": "object",
                    "additionalProperties": {
                        "title": "tags",
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "task": {
                    "type": "object",
                    "$ref": "#/definitions/ComponentParallelTaskSchema"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "parallel"
                    ],
                    "title": "type"
                }
            },
            "additionalProperties": false
        },
        "RetrySettingsSchema": {
            "type": "object",
            "properties": {
                "max_retries": {
                    "title": "max_retries",
                    "type": "number",
                    "format": "integer"
                },
                "timeout": {
                    "title": "timeout",
                    "type": "number",
                    "format": "integer"
                }
            },
            "additionalProperties": false
        },
        "ComponentParallelTaskSchema": {
            "required": [
                "environment"
            ],
            "type": "object",
            "properties": {
                "append_row_to": {
                    "title": "append_row_to",
                    "type": "string"
                },
                "args": {
                    "title": "args",
                    "type": "string"
                },
                "code": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "^azureml:.*",
                            "arm_type": "codes",
                            "title": "code"
                        },
                        {
                            "title": "code",
                            "type": "string"
                        },
                        {
                            "title": "code",
                            "type": "string"
                        }
                    ]
                },
                "entry_script": {
                    "title": "entry_script",
                    "type": "string"
                },
                "environment": {
                    "anyOf": [
                        {
                            "type": "object",
                            "$ref": "#/definitions/AnonymousEnvironmentSchema"
                        },
                        {
                            "type": "string",
                            "pattern": "^azureml:.*",
                            "arm_type": "environments",
                            "title": "environment"
                        },
                        {
                            "type": "string",
                            "pattern": "^file:.*"
                        }
                    ]
                },
                "model": {
                    "title": "model",
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "function",
                        "model"
                    ],
                    "title": "type"
                }
            },
            "additionalProperties": false
        },
        "CronScheduleSchema": {
            "required": [
                "expression",
                "type"
            ],
            "type": "object",
            "properties": {
                "expression": {
                    "title": "expression",
                    "type": "string"
                },
                "start_time": {
                    "title": "start_time",
                    "type": "string",
                    "format": "date-time"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "enabled",
                        "disabled"
                    ],
                    "title": "status"
                },
                "time_zone": {
                    "title": "time_zone",
                    "type": "string",
                    "enum": [
                        "Dateline Standard Time",
                        "UTC-11",
                        "Aleutian Standard Time",
                        "Hawaiian Standard Time",
                        "Marquesas Standard Time",
                        "Alaskan Standard Time",
                        "UTC-09",
                        "Pacific Standard Time (Mexico)",
                        "UTC-08",
                        "Pacific Standard Time",
                        "US Mountain Standard Time",
                        "Mountain Standard Time (Mexico)",
                        "Mountain Standard Time",
                        "Central America Standard Time",
                        "Central Standard Time",
                        "Easter Island Standard Time",
                        "Central Standard Time (Mexico)",
                        "Canada Central Standard Time",
                        "SA Pacific Standard Time",
                        "Eastern Standard Time (Mexico)",
                        "Eastern Standard Time",
                        "Haiti Standard Time",
                        "Cuba Standard Time",
                        "US Eastern Standard Time",
                        "Paraguay Standard Time",
                        "Atlantic Standard Time",
                        "Venezuela Standard Time",
                        "Central Brazilian Standard Time",
                        "SA Western Standard Time",
                        "Pacific SA Standard Time",
                        "Turks And Caicos Standard Time",
                        "Newfoundland Standard Time",
                        "Tocantins Standard Time",
                        "E. South America Standard Time",
                        "SA Eastern Standard Time",
                        "Argentina Standard Time",
                        "Greenland Standard Time",
                        "Montevideo Standard Time",
                        "Saint Pierre Standard Time",
                        "Bahia Standard Time",
                        "UTC-02",
                        "Mid-Atlantic Standard Time",
                        "Azores Standard Time",
                        "Cape Verde Standard Time",
                        "UTC",
                        "Morocco Standard Time",
                        "GMT Standard Time",
                        "Greenwich Standard Time",
                        "W. Europe Standard Time",
                        "Central Europe Standard Time",
                        "Romance Standard Time",
                        "Central European Standard Time",
                        "W. Central Africa Standard Time",
                        "Namibia Standard Time",
                        "Jordan Standard Time",
                        "GTB Standard Time",
                        "Middle East Standard Time",
                        "Egypt Standard Time",
                        "E. Europe Standard Time",
                        "Syria Standard Time",
                        "West Bank Standard Time",
                        "South Africa Standard Time",
                        "FLE Standard Time",
                        "Turkey Standard Time",
                        "Israel Standard Time",
                        "Kaliningrad Standard Time",
                        "Libya Standard Time",
                        "Arabic Standard Time",
                        "Arab Standard Time",
                        "Belarus Standard Time",
                        "Russian Standard Time",
                        "E. Africa Standard Time",
                        "Iran Standard Time",
                        "Arabian Standard Time",
                        "Astrakhan Standard Time",
                        "Azerbaijan Standard Time",
                        "Russia Time Zone 3",
                        "Mauritius Standard Time",
                        "Georgian Standard Time",
                        "Caucasus Standard Time",
                        "Afghanistan Standard Time",
                        "West Asia Standard Time",
                        "Ekaterinburg Standard Time",
                        "Pakistan Standard Time",
                        "India Standard Time",
                        "Sri Lanka Standard Time",
                        "Nepal Standard Time",
                        "Central Asia Standard Time",
                        "Bangladesh Standard Time",
                        "N. Central Asia Standard Time",
                        "Myanmar Standard Time",
                        "SE Asia Standard Time",
                        "Altai Standard Time",
                        "W. Mongolia Standard Time",
                        "North Asia Standard Time",
                        "Tomsk Standard Time",
                        "China Standard Time",
                        "North Asia East Standard Time",
                        "Singapore Standard Time",
                        "W. Australia Standard Time",
                        "Taipei Standard Time",
                        "Ulaanbaatar Standard Time",
                        "North Korea Standard Time",
                        "Aus Central W. Standard Time",
                        "Transbaikal Standard Time",
                        "Tokyo Standard Time",
                        "Korea Standard Time",
                        "Yakutsk Standard Time",
                        "Cen. Australia Standard Time",
                        "AUS Central Standard Time",
                        "E. Australia Standard Time",
                        "AUS Eastern Standard Time",
                        "West Pacific Standard Time",
                        "Tasmania Standard Time",
                        "Vladivostok Standard Time",
                        "Lord Howe Standard Time",
                        "Bougainville Standard Time",
                        "Russia Time Zone 10",
                        "Magadan Standard Time",
                        "Norfolk Standard Time",
                        "Sakhalin Standard Time",
                        "Central Pacific Standard Time",
                        "Russia Time Zone 11",
                        "New Zealand Standard Time",
                        "UTC+12",
                        "Fiji Standard Time",
                        "Kamchatka Standard Time",
                        "Chatham Islands Standard Time",
                        "Tonga Standard Time",
                        "Samoa Standard Time",
                        "Line Islands Standard Time"
                    ],
                    "enumNames": []
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "cron"
                    ],
                    "title": "type"
                }
            },
            "additionalProperties": false
        },
        "RecurrenceScheduleSchema": {
            "required": [
                "frequency",
                "interval",
                "type"
            ],
            "type": "object",
            "properties": {
                "frequency": {
                    "type": "string",
                    "enum": [
                        "minute",
                        "hour",
                        "day",
                        "week",
                        "month"
                    ],
                    "title": "frequency"
                },
                "interval": {
                    "title": "interval",
                    "type": "number",
                    "format": "integer"
                },
                "pattern": {
                    "type": "object",
                    "$ref": "#/definitions/RecurrencePatternSchema"
                },
                "start_time": {
                    "title": "start_time",
                    "type": "string",
                    "format": "date-time"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "enabled",
                        "disabled"
                    ],
                    "title": "status"
                },
                "time_zone": {
                    "title": "time_zone",
                    "type": "string",
                    "enum": [
                        "Dateline Standard Time",
                        "UTC-11",
                        "Aleutian Standard Time",
                        "Hawaiian Standard Time",
                        "Marquesas Standard Time",
                        "Alaskan Standard Time",
                        "UTC-09",
                        "Pacific Standard Time (Mexico)",
                        "UTC-08",
                        "Pacific Standard Time",
                        "US Mountain Standard Time",
                        "Mountain Standard Time (Mexico)",
                        "Mountain Standard Time",
                        "Central America Standard Time",
                        "Central Standard Time",
                        "Easter Island Standard Time",
                        "Central Standard Time (Mexico)",
                        "Canada Central Standard Time",
                        "SA Pacific Standard Time",
                        "Eastern Standard Time (Mexico)",
                        "Eastern Standard Time",
                        "Haiti Standard Time",
                        "Cuba Standard Time",
                        "US Eastern Standard Time",
                        "Paraguay Standard Time",
                        "Atlantic Standard Time",
                        "Venezuela Standard Time",
                        "Central Brazilian Standard Time",
                        "SA Western Standard Time",
                        "Pacific SA Standard Time",
                        "Turks And Caicos Standard Time",
                        "Newfoundland Standard Time",
                        "Tocantins Standard Time",
                        "E. South America Standard Time",
                        "SA Eastern Standard Time",
                        "Argentina Standard Time",
                        "Greenland Standard Time",
                        "Montevideo Standard Time",
                        "Saint Pierre Standard Time",
                        "Bahia Standard Time",
                        "UTC-02",
                        "Mid-Atlantic Standard Time",
                        "Azores Standard Time",
                        "Cape Verde Standard Time",
                        "UTC",
                        "Morocco Standard Time",
                        "GMT Standard Time",
                        "Greenwich Standard Time",
                        "W. Europe Standard Time",
                        "Central Europe Standard Time",
                        "Romance Standard Time",
                        "Central European Standard Time",
                        "W. Central Africa Standard Time",
                        "Namibia Standard Time",
                        "Jordan Standard Time",
                        "GTB Standard Time",
                        "Middle East Standard Time",
                        "Egypt Standard Time",
                        "E. Europe Standard Time",
                        "Syria Standard Time",
                        "West Bank Standard Time",
                        "South Africa Standard Time",
                        "FLE Standard Time",
                        "Turkey Standard Time",
                        "Israel Standard Time",
                        "Kaliningrad Standard Time",
                        "Libya Standard Time",
                        "Arabic Standard Time",
                        "Arab Standard Time",
                        "Belarus Standard Time",
                        "Russian Standard Time",
                        "E. Africa Standard Time",
                        "Iran Standard Time",
                        "Arabian Standard Time",
                        "Astrakhan Standard Time",
                        "Azerbaijan Standard Time",
                        "Russia Time Zone 3",
                        "Mauritius Standard Time",
                        "Georgian Standard Time",
                        "Caucasus Standard Time",
                        "Afghanistan Standard Time",
                        "West Asia Standard Time",
                        "Ekaterinburg Standard Time",
                        "Pakistan Standard Time",
                        "India Standard Time",
                        "Sri Lanka Standard Time",
                        "Nepal Standard Time",
                        "Central Asia Standard Time",
                        "Bangladesh Standard Time",
                        "N. Central Asia Standard Time",
                        "Myanmar Standard Time",
                        "SE Asia Standard Time",
                        "Altai Standard Time",
                        "W. Mongolia Standard Time",
                        "North Asia Standard Time",
                        "Tomsk Standard Time",
                        "China Standard Time",
                        "North Asia East Standard Time",
                        "Singapore Standard Time",
                        "W. Australia Standard Time",
                        "Taipei Standard Time",
                        "Ulaanbaatar Standard Time",
                        "North Korea Standard Time",
                        "Aus Central W. Standard Time",
                        "Transbaikal Standard Time",
                        "Tokyo Standard Time",
                        "Korea Standard Time",
                        "Yakutsk Standard Time",
                        "Cen. Australia Standard Time",
                        "AUS Central Standard Time",
                        "E. Australia Standard Time",
                        "AUS Eastern Standard Time",
                        "West Pacific Standard Time",
                        "Tasmania Standard Time",
                        "Vladivostok Standard Time",
                        "Lord Howe Standard Time",
                        "Bougainville Standard Time",
                        "Russia Time Zone 10",
                        "Magadan Standard Time",
                        "Norfolk Standard Time",
                        "Sakhalin Standard Time",
                        "Central Pacific Standard Time",
                        "Russia Time Zone 11",
                        "New Zealand Standard Time",
                        "UTC+12",
                        "Fiji Standard Time",
                        "Kamchatka Standard Time",
                        "Chatham Islands Standard Time",
                        "Tonga Standard Time",
                        "Samoa Standard Time",
                        "Line Islands Standard Time"
                    ],
                    "enumNames": []
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "recurrence"
                    ],
                    "title": "type"
                }
            },
            "additionalProperties": false
        },
        "RecurrencePatternSchema": {
            "required": [
                "hours",
                "minutes"
            ],
            "type": "object",
            "properties": {
                "hours": {
                    "anyOf": [
                        {
                            "title": "hours",
                            "type": "number",
                            "format": "integer"
                        },
                        {
                            "title": "hours",
                            "type": "array",
                            "items": {
                                "title": "hours",
                                "type": "number",
                                "format": "integer"
                            }
                        }
                    ]
                },
                "minutes": {
                    "anyOf": [
                        {
                            "title": "minutes",
                            "type": "number",
                            "format": "integer"
                        },
                        {
                            "title": "minutes",
                            "type": "array",
                            "items": {
                                "title": "minutes",
                                "type": "number",
                                "format": "integer"
                            }
                        }
                    ]
                },
                "weekdays": {
                    "anyOf": [
                        {
                            "type": "string",
                            "enum": [
                                "monday",
                                "tuesday",
                                "wednesday",
                                "thursday",
                                "friday",
                                "saturday",
                                "sunday"
                            ],
                            "title": "weekdays"
                        },
                        {
                            "title": "weekdays",
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "monday",
                                    "tuesday",
                                    "wednesday",
                                    "thursday",
                                    "friday",
                                    "saturday",
                                    "sunday"
                                ],
                                "title": "weekdays"
                            }
                        }
                    ]
                }
            },
            "additionalProperties": false
        },
        "PipelineJobSettingsSchema": {
            "type": "object",
            "properties": {
                "continue_on_step_failure": {
                    "title": "continue_on_step_failure",
                    "type": "boolean"
                },
                "default_compute": {
                    "type": "string",
                    "pattern": "^azureml:.*",
                    "arm_type": "computes",
                    "title": "default_compute"
                },
                "default_datastore": {
                    "type": "string",
                    "pattern": "^azureml:.*",
                    "arm_type": "datastores",
                    "title": "default_datastore"
                }
            },
            "additionalProperties": true
        },
        "PipelineJobSchema": {
            "type": "object",
            "properties": {
                "compute": {
                    "anyOf": [
                        {
                            "type": "string",
                            "enum": [
                                "local"
                            ],
                            "title": "compute"
                        },
                        {
                            "type": "string",
                            "pattern": "^azureml:.*",
                            "arm_type": "computes",
                            "title": "compute"
                        },
                        {
                            "title": "compute",
                            "type": "string"
                        }
                    ]
                },
                "creation_context": {
                    "type": "object",
                    "$ref": "#/definitions/CreationContextSchema"
                },
                "description": {
                    "title": "description",
                    "type": "string"
                },
                "display_name": {
                    "title": "display_name",
                    "type": "string"
                },
                "experiment_name": {
                    "title": "experiment_name",
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "pattern": "^azureml:.*",
                    "arm_type": "jobs",
                    "title": "id",
                    "readonly": true
                },
                "identity": {
                    "anyOf": [
                        {
                            "type": "object",
                            "$ref": "#/definitions/ManagedIdentitySchema"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/AMLTokenIdentitySchema"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/UserIdentitySchema"
                        }
                    ]
                },
                "inputs": {
                    "anyOf": [
                        {
                            "type": "object",
                            "$ref": "#/definitions/InputSchema"
                        },
                        {
                            "title": "inputs",
                            "type": "object",
                            "additionalProperties": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "$ref": "#/definitions/InputSchema"
                                    },
                                    {
                                        "type": "object",
                                        "$ref": "#/definitions/InputLiteralValueSchema"
                                    },
                                    {
                                        "title": "inputs",
                                        "type": "number",
                                        "format": "integer"
                                    },
                                    {
                                        "title": "inputs",
                                        "type": "string"
                                    },
                                    {
                                        "title": "inputs",
                                        "type": "boolean"
                                    },
                                    {
                                        "title": "inputs",
                                        "type": "number",
                                        "format": "float"
                                    }
                                ]
                            }
                        }
                    ]
                },
                "jobs": {
                    "title": "jobs",
                    "type": "object",
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "type": "object",
                                "$ref": "#/definitions/CommandSchema"
                            },
                            {
                                "type": "object",
                                "$ref": "#/definitions/SweepSchema"
                            },
                            {
                                "type": "object",
                                "$ref": "#/definitions/PipelineCommandJobSchema"
                            },
                            {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "$ref": "#/definitions/AutoMLClassificationNodeSchema"
                                    },
                                    {
                                        "type": "object",
                                        "$ref": "#/definitions/AutoMLRegressionNodeSchema"
                                    },
                                    {
                                        "type": "object",
                                        "$ref": "#/definitions/AutoMLForecastingNodeSchema"
                                    },
                                    {
                                        "type": "object",
                                        "$ref": "#/definitions/ImageClassificationMulticlassNodeSchema"
                                    },
                                    {
                                        "type": "object",
                                        "$ref": "#/definitions/ImageClassificationMultilabelNodeSchema"
                                    },
                                    {
                                        "type": "object",
                                        "$ref": "#/definitions/ImageObjectDetectionNodeSchema"
                                    },
                                    {
                                        "type": "object",
                                        "$ref": "#/definitions/ImageInstanceSegmentationNodeSchema"
                                    },
                                    {
                                        "type": "object",
                                        "$ref": "#/definitions/AutoMLTextClassificationNode"
                                    },
                                    {
                                        "type": "object",
                                        "$ref": "#/definitions/AutoMLTextClassificationMultilabelNode"
                                    },
                                    {
                                        "type": "object",
                                        "$ref": "#/definitions/AutoMLTextNerNode"
                                    }
                                ]
                            },
                            {
                                "type": "object",
                                "$ref": "#/definitions/PipelineParallelJobSchema"
                            }
                        ]
                    }
                },
                "log_files": {
                    "title": "log_files",
                    "type": "object",
                    "additionalProperties": {
                        "title": "log_files",
                        "type": "string"
                    }
                },
                "name": {
                    "title": "name",
                    "type": "string"
                },
                "outputs": {
                    "title": "outputs",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "$ref": "#/definitions/OutputSchema"
                    }
                },
                "properties": {
                    "title": "properties",
                    "type": "object",
                    "additionalProperties": {
                        "title": "properties",
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "schedule": {
                    "anyOf": [
                        {
                            "type": "object",
                            "$ref": "#/definitions/CronScheduleSchema"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/RecurrenceScheduleSchema"
                        }
                    ]
                },
                "$schema": {
                    "title": "$schema",
                    "type": "string",
                    "readonly": true
                },
                "services": {
                    "title": "services",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "$ref": "#/definitions/JobServiceSchema"
                    }
                },
                "settings": {
                    "type": "object",
                    "$ref": "#/definitions/PipelineJobSettingsSchema"
                },
                "status": {
                    "title": "status",
                    "type": "string",
                    "readonly": true
                },
                "tags": {
                    "title": "tags",
                    "type": "object",
                    "additionalProperties": {
                        "title": "tags",
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "pipeline"
                    ],
                    "title": "type"
                }
            },
            "additionalProperties": false
        }
    },
    "$ref": "#/definitions/PipelineJobSchema"
}
